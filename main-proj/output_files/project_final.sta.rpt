TimeQuest Timing Analyzer report for project_final
Tue Dec 04 20:22:43 2018
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'out_ctrl:inst|numA[2]'
 12. Slow Model Setup: 'out_ctrl:inst|numRes[0]'
 13. Slow Model Setup: 'out_ctrl:inst|numB[2]'
 14. Slow Model Hold: 'out_ctrl:inst|numRes[0]'
 15. Slow Model Hold: 'out_ctrl:inst|numA[2]'
 16. Slow Model Hold: 'out_ctrl:inst|numB[2]'
 17. Slow Model Minimum Pulse Width: 'clk'
 18. Slow Model Minimum Pulse Width: 'out_ctrl:inst|numRes[0]'
 19. Slow Model Minimum Pulse Width: 'out_ctrl:inst|numA[2]'
 20. Slow Model Minimum Pulse Width: 'out_ctrl:inst|numB[2]'
 21. Setup Times
 22. Hold Times
 23. Clock to Output Times
 24. Minimum Clock to Output Times
 25. Fast Model Setup Summary
 26. Fast Model Hold Summary
 27. Fast Model Recovery Summary
 28. Fast Model Removal Summary
 29. Fast Model Minimum Pulse Width Summary
 30. Fast Model Setup: 'out_ctrl:inst|numA[2]'
 31. Fast Model Setup: 'out_ctrl:inst|numRes[0]'
 32. Fast Model Setup: 'out_ctrl:inst|numB[2]'
 33. Fast Model Hold: 'out_ctrl:inst|numRes[0]'
 34. Fast Model Hold: 'out_ctrl:inst|numA[2]'
 35. Fast Model Hold: 'out_ctrl:inst|numB[2]'
 36. Fast Model Minimum Pulse Width: 'clk'
 37. Fast Model Minimum Pulse Width: 'out_ctrl:inst|numRes[0]'
 38. Fast Model Minimum Pulse Width: 'out_ctrl:inst|numA[2]'
 39. Fast Model Minimum Pulse Width: 'out_ctrl:inst|numB[2]'
 40. Setup Times
 41. Hold Times
 42. Clock to Output Times
 43. Minimum Clock to Output Times
 44. Multicorner Timing Analysis Summary
 45. Setup Times
 46. Hold Times
 47. Clock to Output Times
 48. Minimum Clock to Output Times
 49. Setup Transfers
 50. Hold Transfers
 51. Report TCCS
 52. Report RSKM
 53. Unconstrained Paths
 54. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                      ;
+--------------------+-------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition ;
; Revision Name      ; project_final                                                     ;
; Device Family      ; Cyclone II                                                        ;
; Device Name        ; EP2C35F672C6                                                      ;
; Timing Models      ; Final                                                             ;
; Delay Model        ; Combined                                                          ;
; Rise/Fall Delays   ; Unavailable                                                       ;
+--------------------+-------------------------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 4      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                                           ;
+-------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------+
; Clock Name              ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets                     ;
+-------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------+
; clk                     ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk }                     ;
; out_ctrl:inst|numA[2]   ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { out_ctrl:inst|numA[2] }   ;
; out_ctrl:inst|numB[2]   ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { out_ctrl:inst|numB[2] }   ;
; out_ctrl:inst|numRes[0] ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { out_ctrl:inst|numRes[0] } ;
+-------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------+


+-----------------------------------------------------------------------------------+
; Slow Model Fmax Summary                                                           ;
+-------------+-----------------+-------------------------+-------------------------+
; Fmax        ; Restricted Fmax ; Clock Name              ; Note                    ;
+-------------+-----------------+-------------------------+-------------------------+
; INF MHz     ; 115.34 MHz      ; out_ctrl:inst|numRes[0] ; limit due to hold check ;
; 1002.0 MHz  ; 389.41 MHz      ; out_ctrl:inst|numA[2]   ; limit due to hold check ;
; 2732.24 MHz ; 479.85 MHz      ; out_ctrl:inst|numB[2]   ; limit due to hold check ;
+-------------+-----------------+-------------------------+-------------------------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+--------------------------------------------------+
; Slow Model Setup Summary                         ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; out_ctrl:inst|numA[2]   ; -3.008 ; -8.541        ;
; out_ctrl:inst|numRes[0] ; -2.860 ; -17.571       ;
; out_ctrl:inst|numB[2]   ; -2.700 ; -8.477        ;
+-------------------------+--------+---------------+


+--------------------------------------------------+
; Slow Model Hold Summary                          ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; out_ctrl:inst|numRes[0] ; -4.335 ; -23.977       ;
; out_ctrl:inst|numA[2]   ; -1.284 ; -3.562        ;
; out_ctrl:inst|numB[2]   ; -1.042 ; -2.883        ;
+-------------------------+--------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+--------------------------------------------------+
; Slow Model Minimum Pulse Width Summary           ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; clk                     ; -1.380 ; -28.380       ;
; out_ctrl:inst|numRes[0] ; 0.077  ; 0.000         ;
; out_ctrl:inst|numA[2]   ; 0.500  ; 0.000         ;
; out_ctrl:inst|numB[2]   ; 0.500  ; 0.000         ;
+-------------------------+--------+---------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'out_ctrl:inst|numA[2]'                                                                                                                   ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+
; Slack  ; From Node             ; To Node                           ; Launch Clock          ; Latch Clock           ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+
; -3.008 ; out_ctrl:inst|numA[4] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 1.006      ; 3.135      ;
; -2.793 ; out_ctrl:inst|numA[4] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 1.006      ; 3.164      ;
; -2.788 ; out_ctrl:inst|numA[3] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 1.006      ; 2.915      ;
; -2.776 ; out_ctrl:inst|numA[1] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.741      ; 2.638      ;
; -2.570 ; out_ctrl:inst|numA[3] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 1.006      ; 2.941      ;
; -2.560 ; out_ctrl:inst|numA[1] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.741      ; 2.666      ;
; -2.447 ; out_ctrl:inst|numA[4] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.998      ; 2.970      ;
; -2.402 ; out_ctrl:inst|numA[6] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 1.006      ; 2.529      ;
; -2.255 ; out_ctrl:inst|numA[1] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.733      ; 2.513      ;
; -2.215 ; out_ctrl:inst|numA[3] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.998      ; 2.738      ;
; -1.971 ; out_ctrl:inst|numA[5] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 1.175      ; 2.511      ;
; -1.921 ; out_ctrl:inst|numA[5] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 1.175      ; 2.217      ;
; -1.648 ; out_ctrl:inst|numA[6] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.998      ; 2.171      ;
; -1.492 ; out_ctrl:inst|numA[7] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 1.175      ; 1.788      ;
; -1.439 ; out_ctrl:inst|numA[6] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 1.006      ; 1.810      ;
; -1.244 ; out_ctrl:inst|numA[7] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 1.175      ; 1.784      ;
; -1.132 ; out_ctrl:inst|numA[5] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 1.167      ; 1.824      ;
; -0.685 ; out_ctrl:inst|numA[7] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 1.167      ; 1.377      ;
; -0.293 ; out_ctrl:inst|numA[0] ; out_num:inst2|binbcd:inst|bcd0[0] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.604      ; 0.573      ;
; 0.001  ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[1] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; 0.500        ; 3.410      ; 2.780      ;
; 0.213  ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[2] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; 0.500        ; 3.410      ; 2.812      ;
; 0.501  ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[1] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; 1.000        ; 3.410      ; 2.780      ;
; 0.519  ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[3] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; 0.500        ; 3.402      ; 2.658      ;
; 0.713  ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[2] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; 1.000        ; 3.410      ; 2.812      ;
; 1.019  ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[3] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; 1.000        ; 3.402      ; 2.658      ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'out_ctrl:inst|numRes[0]'                                                                                                                        ;
+--------+-------------------------+------------------------------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                            ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+------------------------------------+-------------------------+-------------------------+--------------+------------+------------+
; -2.860 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.707      ; 4.115      ;
; -2.827 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.559      ; 4.058      ;
; -2.810 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.709      ; 4.067      ;
; -2.766 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.709      ; 4.023      ;
; -2.733 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.707      ; 3.988      ;
; -2.700 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.559      ; 3.931      ;
; -2.672 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.707      ; 3.927      ;
; -2.663 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.709      ; 3.920      ;
; -2.615 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.707      ; 3.870      ;
; -2.604 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.709      ; 3.861      ;
; -2.582 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.559      ; 3.813      ;
; -2.525 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.707      ; 3.780      ;
; -2.523 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.707      ; 3.778      ;
; -2.521 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.709      ; 3.778      ;
; -2.510 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.709      ; 3.767      ;
; -2.490 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.559      ; 3.721      ;
; -2.478 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.726      ; 3.752      ;
; -2.469 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.726      ; 3.743      ;
; -2.396 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.559      ; 3.627      ;
; -2.372 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.707      ; 3.627      ;
; -2.342 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.726      ; 3.616      ;
; -2.331 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.726      ; 3.605      ;
; -2.298 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.560      ; 3.530      ;
; -2.270 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.709      ; 3.527      ;
; -2.224 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.726      ; 3.498      ;
; -2.213 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.558      ; 3.589      ;
; -2.182 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.885      ; 4.115      ;
; -2.178 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.726      ; 3.452      ;
; -2.171 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.560      ; 3.403      ;
; -2.149 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.737      ; 4.058      ;
; -2.132 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.726      ; 3.406      ;
; -2.132 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.887      ; 4.067      ;
; -2.088 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.887      ; 4.023      ;
; -2.085 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.561      ; 3.319      ;
; -2.055 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.885      ; 3.988      ;
; -2.053 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.560      ; 3.285      ;
; -2.051 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.558      ; 3.427      ;
; -2.044 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.560      ; 3.276      ;
; -2.022 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.737      ; 3.931      ;
; -2.007 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.558      ; 3.383      ;
; -1.994 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.885      ; 3.927      ;
; -1.985 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.887      ; 3.920      ;
; -1.968 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.558      ; 3.344      ;
; -1.961 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.560      ; 3.193      ;
; -1.958 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.561      ; 3.192      ;
; -1.937 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.885      ; 3.870      ;
; -1.933 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.561      ; 3.167      ;
; -1.926 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.887      ; 3.861      ;
; -1.904 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.737      ; 3.813      ;
; -1.849 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.558      ; 3.225      ;
; -1.848 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.559      ; 3.079      ;
; -1.847 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.885      ; 3.780      ;
; -1.845 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.885      ; 3.778      ;
; -1.843 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.887      ; 3.778      ;
; -1.840 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.561      ; 3.074      ;
; -1.832 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.887      ; 3.767      ;
; -1.812 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.737      ; 3.721      ;
; -1.800 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.904      ; 3.752      ;
; -1.791 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.904      ; 3.743      ;
; -1.786 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.561      ; 3.020      ;
; -1.748 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.561      ; 2.982      ;
; -1.718 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.737      ; 3.627      ;
; -1.694 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.885      ; 3.627      ;
; -1.673 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.558      ; 3.049      ;
; -1.664 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.904      ; 3.616      ;
; -1.653 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.904      ; 3.605      ;
; -1.651 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.560      ; 2.883      ;
; -1.636 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.559      ; 2.867      ;
; -1.636 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.558      ; 3.012      ;
; -1.633 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.561      ; 2.867      ;
; -1.620 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.738      ; 3.530      ;
; -1.592 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.887      ; 3.527      ;
; -1.546 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.904      ; 3.498      ;
; -1.535 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.736      ; 3.589      ;
; -1.500 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.904      ; 3.452      ;
; -1.498 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 1.560      ; 2.730      ;
; -1.493 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.738      ; 3.403      ;
; -1.454 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.904      ; 3.406      ;
; -1.407 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.739      ; 3.319      ;
; -1.375 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.738      ; 3.285      ;
; -1.373 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.736      ; 3.427      ;
; -1.366 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.738      ; 3.276      ;
; -1.329 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.736      ; 3.383      ;
; -1.290 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.736      ; 3.344      ;
; -1.283 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.738      ; 3.193      ;
; -1.280 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.739      ; 3.192      ;
; -1.255 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.739      ; 3.167      ;
; -1.171 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.736      ; 3.225      ;
; -1.170 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.737      ; 3.079      ;
; -1.162 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.739      ; 3.074      ;
; -1.108 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.739      ; 3.020      ;
; -1.070 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.739      ; 2.982      ;
; -0.995 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.736      ; 3.049      ;
; -0.973 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.738      ; 2.883      ;
; -0.958 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.737      ; 2.867      ;
; -0.958 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.736      ; 3.012      ;
; -0.955 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.739      ; 2.867      ;
; -0.820 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 1.738      ; 2.730      ;
; 0.679  ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[1] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.500        ; 5.223      ; 4.342      ;
; 0.712  ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[3] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.500        ; 5.075      ; 4.285      ;
+--------+-------------------------+------------------------------------+-------------------------+-------------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'out_ctrl:inst|numB[2]'                                                                                                                   ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+
; Slack  ; From Node             ; To Node                           ; Launch Clock          ; Latch Clock           ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+
; -2.700 ; out_ctrl:inst|numB[1] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.472      ; 2.849      ;
; -2.663 ; out_ctrl:inst|numB[1] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.583      ; 2.797      ;
; -2.650 ; out_ctrl:inst|numB[1] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.583      ; 2.785      ;
; -2.314 ; out_ctrl:inst|numB[3] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 1.374      ; 3.239      ;
; -2.305 ; out_ctrl:inst|numB[6] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 1.374      ; 3.230      ;
; -2.254 ; out_ctrl:inst|numB[3] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 1.263      ; 3.194      ;
; -2.246 ; out_ctrl:inst|numB[4] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 1.263      ; 3.186      ;
; -2.203 ; out_ctrl:inst|numB[3] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 1.374      ; 3.129      ;
; -2.196 ; out_ctrl:inst|numB[4] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 1.374      ; 3.122      ;
; -2.188 ; out_ctrl:inst|numB[6] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 1.263      ; 3.128      ;
; -2.169 ; out_ctrl:inst|numB[4] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 1.374      ; 3.094      ;
; -1.485 ; out_ctrl:inst|numB[5] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 1.374      ; 2.411      ;
; -1.451 ; out_ctrl:inst|numB[6] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 1.374      ; 2.377      ;
; -1.240 ; out_ctrl:inst|numB[5] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 1.374      ; 2.165      ;
; -1.011 ; out_ctrl:inst|numB[5] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 1.263      ; 1.951      ;
; -0.822 ; out_ctrl:inst|numB[7] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 1.263      ; 1.762      ;
; -0.664 ; out_ctrl:inst|numB[7] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 1.374      ; 1.589      ;
; -0.662 ; out_ctrl:inst|numB[7] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 1.374      ; 1.588      ;
; -0.464 ; out_ctrl:inst|numB[0] ; out_num:inst3|binbcd:inst|bcd0[0] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.467      ; 0.573      ;
; 0.317  ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[3] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; 0.500        ; 3.148      ; 2.758      ;
; 0.386  ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[1] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; 0.500        ; 3.259      ; 2.674      ;
; 0.391  ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[2] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; 0.500        ; 3.259      ; 2.670      ;
; 0.817  ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[3] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; 1.000        ; 3.148      ; 2.758      ;
; 0.886  ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[1] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; 1.000        ; 3.259      ; 2.674      ;
; 0.891  ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[2] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; 1.000        ; 3.259      ; 2.670      ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'out_ctrl:inst|numRes[0]'                                                                                                                         ;
+--------+-------------------------+------------------------------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                            ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+------------------------------------+-------------------------+-------------------------+--------------+------------+------------+
; -4.335 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[0] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 5.483      ; 1.398      ;
; -4.090 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[0] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 5.238      ; 1.398      ;
; -3.835 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[0] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 5.483      ; 1.398      ;
; -3.590 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[0] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 5.238      ; 1.398      ;
; -3.076 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[0] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 5.665      ; 2.839      ;
; -3.016 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[2] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 5.648      ; 2.882      ;
; -3.015 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[1] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 5.646      ; 2.881      ;
; -2.831 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[0] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 5.420      ; 2.839      ;
; -2.791 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[2] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 5.500      ; 2.959      ;
; -2.771 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[2] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 5.403      ; 2.882      ;
; -2.770 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[1] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 5.401      ; 2.881      ;
; -2.708 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[1] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 5.499      ; 3.041      ;
; -2.640 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[3] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 5.497      ; 3.107      ;
; -2.576 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[0] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 5.665      ; 2.839      ;
; -2.546 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[2] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 5.255      ; 2.959      ;
; -2.516 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[2] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 5.648      ; 2.882      ;
; -2.515 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[1] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 5.646      ; 2.881      ;
; -2.463 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[1] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 5.254      ; 3.041      ;
; -2.396 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[3] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 5.498      ; 3.352      ;
; -2.395 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[3] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 5.252      ; 3.107      ;
; -2.331 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[0] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 5.420      ; 2.839      ;
; -2.291 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[2] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 5.500      ; 2.959      ;
; -2.271 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[2] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 5.403      ; 2.882      ;
; -2.270 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[1] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 5.401      ; 2.881      ;
; -2.208 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[1] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 5.499      ; 3.041      ;
; -2.151 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[3] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 5.253      ; 3.352      ;
; -2.140 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[3] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 5.497      ; 3.107      ;
; -2.046 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[2] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 5.255      ; 2.959      ;
; -1.963 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[1] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 5.254      ; 3.041      ;
; -1.896 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[3] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 5.498      ; 3.352      ;
; -1.895 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[3] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 5.252      ; 3.107      ;
; -1.651 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[3] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 5.253      ; 3.352      ;
; -0.053 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.887      ; 1.834      ;
; -0.052 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.885      ; 1.833      ;
; 0.133  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.738      ; 1.871      ;
; 0.150  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.739      ; 1.889      ;
; 0.170  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.904      ; 2.074      ;
; 0.202  ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.132      ; 1.834      ;
; 0.203  ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.130      ; 1.833      ;
; 0.269  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.739      ; 2.008      ;
; 0.271  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.737      ; 2.008      ;
; 0.271  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.887      ; 2.158      ;
; 0.272  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.885      ; 2.157      ;
; 0.301  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.736      ; 2.037      ;
; 0.388  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 1.983      ; 1.871      ;
; 0.401  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.887      ; 2.288      ;
; 0.403  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.885      ; 2.288      ;
; 0.405  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 1.984      ; 1.889      ;
; 0.417  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.736      ; 2.153      ;
; 0.425  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.149      ; 2.074      ;
; 0.521  ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.887      ; 2.408      ;
; 0.522  ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.885      ; 2.407      ;
; 0.524  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 1.984      ; 2.008      ;
; 0.526  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 1.982      ; 2.008      ;
; 0.526  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.132      ; 2.158      ;
; 0.527  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.130      ; 2.157      ;
; 0.539  ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.904      ; 2.443      ;
; 0.556  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 1.981      ; 2.037      ;
; 0.560  ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.887      ; 2.447      ;
; 0.561  ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.885      ; 2.446      ;
; 0.604  ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.887      ; 2.491      ;
; 0.605  ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.885      ; 2.490      ;
; 0.652  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.904      ; 2.556      ;
; 0.656  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.132      ; 2.288      ;
; 0.658  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.130      ; 2.288      ;
; 0.672  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 1.981      ; 2.153      ;
; 0.687  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.737      ; 2.424      ;
; 0.746  ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.739      ; 2.485      ;
; 0.766  ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.904      ; 2.670      ;
; 0.766  ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.887      ; 2.653      ;
; 0.767  ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.885      ; 2.652      ;
; 0.774  ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.739      ; 2.513      ;
; 0.776  ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.132      ; 2.408      ;
; 0.777  ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.130      ; 2.407      ;
; 0.794  ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.149      ; 2.443      ;
; 0.794  ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.904      ; 2.698      ;
; 0.815  ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.132      ; 2.447      ;
; 0.816  ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.130      ; 2.446      ;
; 0.826  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.738      ; 2.564      ;
; 0.829  ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.738      ; 2.567      ;
; 0.829  ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.739      ; 2.568      ;
; 0.849  ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.904      ; 2.753      ;
; 0.859  ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.132      ; 2.491      ;
; 0.860  ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.130      ; 2.490      ;
; 0.868  ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.738      ; 2.606      ;
; 0.897  ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.736      ; 2.633      ;
; 0.907  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.149      ; 2.556      ;
; 0.912  ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.738      ; 2.650      ;
; 0.925  ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.736      ; 2.661      ;
; 0.942  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 1.982      ; 2.424      ;
; 0.980  ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.736      ; 2.716      ;
; 0.991  ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.739      ; 2.730      ;
; 0.992  ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.738      ; 2.730      ;
; 1.001  ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 1.984      ; 2.485      ;
; 1.021  ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.149      ; 2.670      ;
; 1.021  ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.132      ; 2.653      ;
; 1.022  ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.130      ; 2.652      ;
; 1.029  ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 1.984      ; 2.513      ;
; 1.043  ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 1.904      ; 2.947      ;
; 1.049  ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.149      ; 2.698      ;
+--------+-------------------------+------------------------------------+-------------------------+-------------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'out_ctrl:inst|numA[2]'                                                                                                                    ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+
; Slack  ; From Node             ; To Node                           ; Launch Clock          ; Latch Clock           ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+
; -1.284 ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[3] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; 0.000        ; 3.402      ; 2.368      ;
; -1.264 ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[2] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; 0.000        ; 3.410      ; 2.396      ;
; -1.014 ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[1] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; 0.000        ; 3.410      ; 2.646      ;
; -0.784 ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[3] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; -0.500       ; 3.402      ; 2.368      ;
; -0.764 ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[2] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; -0.500       ; 3.410      ; 2.396      ;
; -0.514 ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[1] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; -0.500       ; 3.410      ; 2.646      ;
; 0.469  ; out_ctrl:inst|numA[0] ; out_num:inst2|binbcd:inst|bcd0[0] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.604      ; 0.573      ;
; 0.710  ; out_ctrl:inst|numA[7] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 1.167      ; 1.377      ;
; 1.109  ; out_ctrl:inst|numA[7] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 1.175      ; 1.784      ;
; 1.113  ; out_ctrl:inst|numA[7] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 1.175      ; 1.788      ;
; 1.157  ; out_ctrl:inst|numA[5] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 1.167      ; 1.824      ;
; 1.304  ; out_ctrl:inst|numA[6] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 1.006      ; 1.810      ;
; 1.415  ; out_ctrl:inst|numA[3] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.998      ; 1.913      ;
; 1.424  ; out_ctrl:inst|numA[5] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 1.175      ; 2.099      ;
; 1.446  ; out_ctrl:inst|numA[4] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 1.006      ; 1.952      ;
; 1.542  ; out_ctrl:inst|numA[5] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 1.175      ; 2.217      ;
; 1.625  ; out_ctrl:inst|numA[6] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.998      ; 2.123      ;
; 1.814  ; out_ctrl:inst|numA[6] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 1.006      ; 2.320      ;
; 1.848  ; out_ctrl:inst|numA[1] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.733      ; 2.081      ;
; 1.877  ; out_ctrl:inst|numA[1] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.741      ; 2.118      ;
; 1.887  ; out_ctrl:inst|numA[3] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 1.006      ; 2.393      ;
; 1.970  ; out_ctrl:inst|numA[3] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 1.006      ; 2.476      ;
; 1.982  ; out_ctrl:inst|numA[1] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.741      ; 2.223      ;
; 2.080  ; out_ctrl:inst|numA[4] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.998      ; 2.578      ;
; 2.380  ; out_ctrl:inst|numA[4] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 1.006      ; 2.886      ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'out_ctrl:inst|numB[2]'                                                                                                                    ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+
; Slack  ; From Node             ; To Node                           ; Launch Clock          ; Latch Clock           ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+
; -1.042 ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[2] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; 0.000        ; 3.259      ; 2.467      ;
; -0.971 ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[1] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; 0.000        ; 3.259      ; 2.538      ;
; -0.870 ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[3] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; 0.000        ; 3.148      ; 2.528      ;
; -0.542 ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[2] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; -0.500       ; 3.259      ; 2.467      ;
; -0.471 ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[1] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; -0.500       ; 3.259      ; 2.538      ;
; -0.370 ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[3] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; -0.500       ; 3.148      ; 2.528      ;
; 0.606  ; out_ctrl:inst|numB[0] ; out_num:inst3|binbcd:inst|bcd0[0] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.467      ; 0.573      ;
; 0.714  ; out_ctrl:inst|numB[7] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 1.374      ; 1.588      ;
; 0.715  ; out_ctrl:inst|numB[7] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 1.374      ; 1.589      ;
; 0.999  ; out_ctrl:inst|numB[7] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 1.263      ; 1.762      ;
; 1.134  ; out_ctrl:inst|numB[5] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 1.374      ; 2.008      ;
; 1.139  ; out_ctrl:inst|numB[6] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 1.263      ; 1.902      ;
; 1.188  ; out_ctrl:inst|numB[5] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 1.263      ; 1.951      ;
; 1.291  ; out_ctrl:inst|numB[5] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 1.374      ; 2.165      ;
; 1.344  ; out_ctrl:inst|numB[4] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 1.374      ; 2.218      ;
; 1.456  ; out_ctrl:inst|numB[3] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 1.263      ; 2.219      ;
; 1.503  ; out_ctrl:inst|numB[6] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 1.374      ; 2.377      ;
; 1.505  ; out_ctrl:inst|numB[6] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 1.374      ; 2.379      ;
; 1.912  ; out_ctrl:inst|numB[4] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 1.263      ; 2.675      ;
; 1.986  ; out_ctrl:inst|numB[3] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 1.374      ; 2.860      ;
; 2.034  ; out_ctrl:inst|numB[4] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 1.374      ; 2.908      ;
; 2.128  ; out_ctrl:inst|numB[3] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 1.374      ; 3.002      ;
; 2.367  ; out_ctrl:inst|numB[1] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.583      ; 2.450      ;
; 2.480  ; out_ctrl:inst|numB[1] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.583      ; 2.563      ;
; 2.589  ; out_ctrl:inst|numB[1] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.472      ; 2.561      ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk'                                                                     ;
+--------+--------------+----------------+------------------+-------+------------+--------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                   ;
+--------+--------------+----------------+------------------+-------+------------+--------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clk   ; Rise       ; clk                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|apaga_d[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|apaga_d[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|apaga_d[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|apaga_d[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|apaga_d[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|apaga_d[2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numA[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numA[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numA[1]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numA[1]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numA[2]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numA[2]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numA[3]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numA[3]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numA[4]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numA[4]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numA[5]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numA[5]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numA[6]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numA[6]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numA[7]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numA[7]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numB[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numB[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numB[1]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numB[1]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numB[2]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numB[2]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numB[3]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numB[3]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numB[4]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numB[4]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numB[5]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numB[5]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numB[6]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numB[6]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numB[7]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numB[7]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numRes[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numRes[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numRes[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numRes[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numRes[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numRes[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numRes[3]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numRes[3]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numRes[4]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numRes[4]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numRes[5]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numRes[5]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numRes[6]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numRes[6]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numRes[7]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numRes[7]  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|inclk[0]     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|inclk[0]     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|outclk       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|outclk       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|apaga_d[0]|clk      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|apaga_d[0]|clk      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|apaga_d[1]|clk      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|apaga_d[1]|clk      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|apaga_d[2]|clk      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|apaga_d[2]|clk      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numA[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numA[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numA[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numA[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numA[2]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numA[2]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numA[3]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numA[3]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numA[4]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numA[4]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numA[5]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numA[5]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numA[6]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numA[6]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numA[7]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numA[7]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numB[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numB[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numB[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numB[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numB[2]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numB[2]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numB[3]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numB[3]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numB[4]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numB[4]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numB[5]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numB[5]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numB[6]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numB[6]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numB[7]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numB[7]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numRes[0]|clk       ;
+--------+--------------+----------------+------------------+-------+------------+--------------------------+


+------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'out_ctrl:inst|numRes[0]'                                                                                ;
+-------+--------------+----------------+------------------+-------------------------+------------+----------------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                   ; Clock Edge ; Target                                 ;
+-------+--------------+----------------+------------------+-------------------------+------------+----------------------------------------+
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~0|combout         ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~0|combout         ;
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~1clkctrl|inclk[0] ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~1clkctrl|inclk[0] ;
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~1clkctrl|outclk   ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~1clkctrl|outclk   ;
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~1|combout         ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~1|combout         ;
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~1|datac           ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~1|datac           ;
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd0[0]|datad              ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd0[0]|datad              ;
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd0[1]|datac              ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd0[1]|datac              ;
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd0[2]|datac              ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd0[2]|datac              ;
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd0[3]|datad              ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd0[3]|datad              ;
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd1[0]|datac              ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd1[0]|datac              ;
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd1[1]|datad              ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd1[1]|datad              ;
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd1[2]|datad              ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd1[2]|datad              ;
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd1[3]|datad              ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd1[3]|datad              ;
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd0[0]     ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd0[0]     ;
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd0[1]     ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd0[1]     ;
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd0[2]     ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd0[2]     ;
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd0[3]     ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd0[3]     ;
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd1[0]     ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd1[0]     ;
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd1[1]     ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd1[1]     ;
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd1[2]     ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd1[2]     ;
; 0.077 ; 0.077        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd1[3]     ;
; 0.077 ; 0.077        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd1[3]     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[2]~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[2]~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[2]~1|datab           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[2]~1|datab           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[3]~2|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[3]~2|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[3]~2|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[3]~2|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[4]~3|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[4]~3|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[4]~3|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[4]~3|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[5]~4|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[5]~4|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[5]~4|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[5]~4|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[6]~6|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[6]~6|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[6]~6|datab           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[6]~6|datab           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst2|saida[7]~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst2|saida[7]~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[7]~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[7]~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~0|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~0|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~0|datab           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~0|datab           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|WideOr17~1clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|WideOr17~1clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|WideOr17~1clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|WideOr17~1clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|WideOr17~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|WideOr17~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~1|datab           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~1|datab           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|WideOr17~1|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|WideOr17~1|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd0[0]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd0[0]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd0[1]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd0[1]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd0[2]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd0[2]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd0[3]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd0[3]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd1[0]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd1[0]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd1[1]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd1[1]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd1[2]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd1[2]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd1[3]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd1[3]|datad              ;
+-------+--------------+----------------+------------------+-------------------------+------------+----------------------------------------+


+---------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'out_ctrl:inst|numA[2]'                                                                               ;
+-------+--------------+----------------+------------------+-----------------------+------------+---------------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                 ; Clock Edge ; Target                                ;
+-------+--------------+----------------+------------------+-----------------------+------------+---------------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~1clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~1clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~1clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~1clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~1|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~1|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|bcd0[0]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|bcd0[0]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|bcd0[1]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|bcd0[1]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|bcd0[2]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|bcd0[2]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|bcd0[3]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|bcd0[3]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst|numA[2]|regout                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst|numA[2]|regout                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; out_num:inst2|binbcd:inst|bcd0[0]     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; out_num:inst2|binbcd:inst|bcd0[0]     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; out_num:inst2|binbcd:inst|bcd0[1]     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; out_num:inst2|binbcd:inst|bcd0[1]     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; out_num:inst2|binbcd:inst|bcd0[2]     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; out_num:inst2|binbcd:inst|bcd0[2]     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; out_num:inst2|binbcd:inst|bcd0[3]     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; out_num:inst2|binbcd:inst|bcd0[3]     ;
+-------+--------------+----------------+------------------+-----------------------+------------+---------------------------------------+


+---------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'out_ctrl:inst|numB[2]'                                                                               ;
+-------+--------------+----------------+------------------+-----------------------+------------+---------------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                 ; Clock Edge ; Target                                ;
+-------+--------------+----------------+------------------+-----------------------+------------+---------------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~1clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~1clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~1clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~1clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~1|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~1|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|bcd0[0]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|bcd0[0]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|bcd0[1]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|bcd0[1]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|bcd0[2]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|bcd0[2]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|bcd0[3]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|bcd0[3]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst|numB[2]|regout                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst|numB[2]|regout                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; out_num:inst3|binbcd:inst|bcd0[0]     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; out_num:inst3|binbcd:inst|bcd0[0]     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; out_num:inst3|binbcd:inst|bcd0[1]     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; out_num:inst3|binbcd:inst|bcd0[1]     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; out_num:inst3|binbcd:inst|bcd0[2]     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; out_num:inst3|binbcd:inst|bcd0[2]     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; out_num:inst3|binbcd:inst|bcd0[3]     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; out_num:inst3|binbcd:inst|bcd0[3]     ;
+-------+--------------+----------------+------------------+-----------------------+------------+---------------------------------------+


+------------------------------------------------------------------------+
; Setup Times                                                            ;
+------------+------------+-------+-------+------------+-----------------+
; Data Port  ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------+------------+-------+-------+------------+-----------------+
; estado[*]  ; clk        ; 6.474 ; 6.474 ; Fall       ; clk             ;
;  estado[0] ; clk        ; 6.474 ; 6.474 ; Fall       ; clk             ;
;  estado[1] ; clk        ; 6.269 ; 6.269 ; Fall       ; clk             ;
; memA[*]    ; clk        ; 4.130 ; 4.130 ; Fall       ; clk             ;
;  memA[0]   ; clk        ; 3.871 ; 3.871 ; Fall       ; clk             ;
;  memA[1]   ; clk        ; 3.859 ; 3.859 ; Fall       ; clk             ;
;  memA[2]   ; clk        ; 3.858 ; 3.858 ; Fall       ; clk             ;
;  memA[3]   ; clk        ; 3.877 ; 3.877 ; Fall       ; clk             ;
;  memA[4]   ; clk        ; 4.130 ; 4.130 ; Fall       ; clk             ;
;  memA[5]   ; clk        ; 3.261 ; 3.261 ; Fall       ; clk             ;
;  memA[6]   ; clk        ; 4.006 ; 4.006 ; Fall       ; clk             ;
;  memA[7]   ; clk        ; 3.330 ; 3.330 ; Fall       ; clk             ;
; memB[*]    ; clk        ; 5.121 ; 5.121 ; Fall       ; clk             ;
;  memB[0]   ; clk        ; 3.717 ; 3.717 ; Fall       ; clk             ;
;  memB[1]   ; clk        ; 4.182 ; 4.182 ; Fall       ; clk             ;
;  memB[2]   ; clk        ; 4.055 ; 4.055 ; Fall       ; clk             ;
;  memB[3]   ; clk        ; 5.121 ; 5.121 ; Fall       ; clk             ;
;  memB[4]   ; clk        ; 4.662 ; 4.662 ; Fall       ; clk             ;
;  memB[5]   ; clk        ; 4.381 ; 4.381 ; Fall       ; clk             ;
;  memB[6]   ; clk        ; 5.024 ; 5.024 ; Fall       ; clk             ;
;  memB[7]   ; clk        ; 3.905 ; 3.905 ; Fall       ; clk             ;
; res[*]     ; clk        ; 6.102 ; 6.102 ; Fall       ; clk             ;
;  res[0]    ; clk        ; 5.737 ; 5.737 ; Fall       ; clk             ;
;  res[1]    ; clk        ; 6.047 ; 6.047 ; Fall       ; clk             ;
;  res[2]    ; clk        ; 5.136 ; 5.136 ; Fall       ; clk             ;
;  res[3]    ; clk        ; 5.152 ; 5.152 ; Fall       ; clk             ;
;  res[4]    ; clk        ; 5.810 ; 5.810 ; Fall       ; clk             ;
;  res[5]    ; clk        ; 5.322 ; 5.322 ; Fall       ; clk             ;
;  res[6]    ; clk        ; 6.102 ; 6.102 ; Fall       ; clk             ;
;  res[7]    ; clk        ; 5.698 ; 5.698 ; Fall       ; clk             ;
+------------+------------+-------+-------+------------+-----------------+


+--------------------------------------------------------------------------+
; Hold Times                                                               ;
+------------+------------+--------+--------+------------+-----------------+
; Data Port  ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+------------+------------+--------+--------+------------+-----------------+
; estado[*]  ; clk        ; -3.262 ; -3.262 ; Fall       ; clk             ;
;  estado[0] ; clk        ; -3.293 ; -3.293 ; Fall       ; clk             ;
;  estado[1] ; clk        ; -3.262 ; -3.262 ; Fall       ; clk             ;
; memA[*]    ; clk        ; -3.031 ; -3.031 ; Fall       ; clk             ;
;  memA[0]   ; clk        ; -3.641 ; -3.641 ; Fall       ; clk             ;
;  memA[1]   ; clk        ; -3.629 ; -3.629 ; Fall       ; clk             ;
;  memA[2]   ; clk        ; -3.628 ; -3.628 ; Fall       ; clk             ;
;  memA[3]   ; clk        ; -3.647 ; -3.647 ; Fall       ; clk             ;
;  memA[4]   ; clk        ; -3.900 ; -3.900 ; Fall       ; clk             ;
;  memA[5]   ; clk        ; -3.031 ; -3.031 ; Fall       ; clk             ;
;  memA[6]   ; clk        ; -3.776 ; -3.776 ; Fall       ; clk             ;
;  memA[7]   ; clk        ; -3.100 ; -3.100 ; Fall       ; clk             ;
; memB[*]    ; clk        ; -3.487 ; -3.487 ; Fall       ; clk             ;
;  memB[0]   ; clk        ; -3.487 ; -3.487 ; Fall       ; clk             ;
;  memB[1]   ; clk        ; -3.952 ; -3.952 ; Fall       ; clk             ;
;  memB[2]   ; clk        ; -3.825 ; -3.825 ; Fall       ; clk             ;
;  memB[3]   ; clk        ; -4.891 ; -4.891 ; Fall       ; clk             ;
;  memB[4]   ; clk        ; -4.432 ; -4.432 ; Fall       ; clk             ;
;  memB[5]   ; clk        ; -4.151 ; -4.151 ; Fall       ; clk             ;
;  memB[6]   ; clk        ; -4.794 ; -4.794 ; Fall       ; clk             ;
;  memB[7]   ; clk        ; -3.675 ; -3.675 ; Fall       ; clk             ;
; res[*]     ; clk        ; -4.906 ; -4.906 ; Fall       ; clk             ;
;  res[0]    ; clk        ; -5.507 ; -5.507 ; Fall       ; clk             ;
;  res[1]    ; clk        ; -5.817 ; -5.817 ; Fall       ; clk             ;
;  res[2]    ; clk        ; -4.906 ; -4.906 ; Fall       ; clk             ;
;  res[3]    ; clk        ; -4.922 ; -4.922 ; Fall       ; clk             ;
;  res[4]    ; clk        ; -5.580 ; -5.580 ; Fall       ; clk             ;
;  res[5]    ; clk        ; -5.092 ; -5.092 ; Fall       ; clk             ;
;  res[6]    ; clk        ; -5.872 ; -5.872 ; Fall       ; clk             ;
;  res[7]    ; clk        ; -5.468 ; -5.468 ; Fall       ; clk             ;
+------------+------------+--------+--------+------------+-----------------+


+----------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                        ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; A0[*]     ; clk                     ; 7.547  ; 7.547  ; Fall       ; clk                     ;
;  A0[0]    ; clk                     ; 7.274  ; 7.274  ; Fall       ; clk                     ;
;  A0[1]    ; clk                     ; 6.970  ; 6.970  ; Fall       ; clk                     ;
;  A0[2]    ; clk                     ; 7.290  ; 7.290  ; Fall       ; clk                     ;
;  A0[3]    ; clk                     ; 7.316  ; 7.316  ; Fall       ; clk                     ;
;  A0[4]    ; clk                     ; 7.281  ; 7.281  ; Fall       ; clk                     ;
;  A0[5]    ; clk                     ; 7.547  ; 7.547  ; Fall       ; clk                     ;
;  A0[6]    ; clk                     ; 6.980  ; 6.980  ; Fall       ; clk                     ;
; B0[*]     ; clk                     ; 7.593  ; 7.593  ; Fall       ; clk                     ;
;  B0[0]    ; clk                     ; 7.308  ; 7.308  ; Fall       ; clk                     ;
;  B0[1]    ; clk                     ; 7.591  ; 7.591  ; Fall       ; clk                     ;
;  B0[2]    ; clk                     ; 7.591  ; 7.591  ; Fall       ; clk                     ;
;  B0[3]    ; clk                     ; 7.582  ; 7.582  ; Fall       ; clk                     ;
;  B0[4]    ; clk                     ; 7.575  ; 7.575  ; Fall       ; clk                     ;
;  B0[5]    ; clk                     ; 7.593  ; 7.593  ; Fall       ; clk                     ;
;  B0[6]    ; clk                     ; 7.324  ; 7.324  ; Fall       ; clk                     ;
; R0[*]     ; clk                     ; 9.790  ; 9.790  ; Fall       ; clk                     ;
;  R0[0]    ; clk                     ; 9.309  ; 9.309  ; Fall       ; clk                     ;
;  R0[1]    ; clk                     ; 9.304  ; 9.304  ; Fall       ; clk                     ;
;  R0[2]    ; clk                     ; 9.321  ; 9.321  ; Fall       ; clk                     ;
;  R0[3]    ; clk                     ; 9.286  ; 9.286  ; Fall       ; clk                     ;
;  R0[4]    ; clk                     ; 9.562  ; 9.562  ; Fall       ; clk                     ;
;  R0[5]    ; clk                     ; 9.790  ; 9.790  ; Fall       ; clk                     ;
;  R0[6]    ; clk                     ; 9.558  ; 9.558  ; Fall       ; clk                     ;
; R1[*]     ; clk                     ; 9.777  ; 9.777  ; Fall       ; clk                     ;
;  R1[0]    ; clk                     ; 9.539  ; 9.539  ; Fall       ; clk                     ;
;  R1[1]    ; clk                     ; 9.335  ; 9.335  ; Fall       ; clk                     ;
;  R1[2]    ; clk                     ; 9.777  ; 9.777  ; Fall       ; clk                     ;
;  R1[3]    ; clk                     ; 9.340  ; 9.340  ; Fall       ; clk                     ;
;  R1[4]    ; clk                     ; 9.341  ; 9.341  ; Fall       ; clk                     ;
;  R1[5]    ; clk                     ; 9.545  ; 9.545  ; Fall       ; clk                     ;
;  R1[6]    ; clk                     ; 9.326  ; 9.326  ; Fall       ; clk                     ;
; SINAL[*]  ; clk                     ; 7.185  ; 7.185  ; Fall       ; clk                     ;
;  SINAL[6] ; clk                     ; 7.185  ; 7.185  ; Fall       ; clk                     ;
; A0[*]     ; out_ctrl:inst|numA[2]   ; 8.762  ; 8.762  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[0]    ; out_ctrl:inst|numA[2]   ; 8.333  ; 8.333  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[1]    ; out_ctrl:inst|numA[2]   ; 8.441  ; 8.441  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[2]    ; out_ctrl:inst|numA[2]   ; 8.762  ; 8.762  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[3]    ; out_ctrl:inst|numA[2]   ; 8.761  ; 8.761  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[4]    ; out_ctrl:inst|numA[2]   ; 8.335  ; 8.335  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[5]    ; out_ctrl:inst|numA[2]   ; 8.605  ; 8.605  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[6]    ; out_ctrl:inst|numA[2]   ; 8.477  ; 8.477  ; Rise       ; out_ctrl:inst|numA[2]   ;
; B0[*]     ; out_ctrl:inst|numB[2]   ; 9.092  ; 9.092  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[0]    ; out_ctrl:inst|numB[2]   ; 8.783  ; 8.783  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[1]    ; out_ctrl:inst|numB[2]   ; 8.512  ; 8.512  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[2]    ; out_ctrl:inst|numB[2]   ; 9.092  ; 9.092  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[3]    ; out_ctrl:inst|numB[2]   ; 9.079  ; 9.079  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[4]    ; out_ctrl:inst|numB[2]   ; 8.487  ; 8.487  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[5]    ; out_ctrl:inst|numB[2]   ; 8.511  ; 8.511  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[6]    ; out_ctrl:inst|numB[2]   ; 8.766  ; 8.766  ; Rise       ; out_ctrl:inst|numB[2]   ;
; R0[*]     ; out_ctrl:inst|numRes[0] ; 10.699 ; 10.699 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[0]    ; out_ctrl:inst|numRes[0] ; 10.631 ; 10.631 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[1]    ; out_ctrl:inst|numRes[0] ; 10.677 ; 10.677 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[2]    ; out_ctrl:inst|numRes[0] ; 10.699 ; 10.699 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[3]    ; out_ctrl:inst|numRes[0] ; 10.663 ; 10.663 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[4]    ; out_ctrl:inst|numRes[0] ; 10.342 ; 10.342 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[5]    ; out_ctrl:inst|numRes[0] ; 10.525 ; 10.525 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[6]    ; out_ctrl:inst|numRes[0] ; 10.345 ; 10.345 ; Rise       ; out_ctrl:inst|numRes[0] ;
; R1[*]     ; out_ctrl:inst|numRes[0] ; 10.732 ; 10.732 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[0]    ; out_ctrl:inst|numRes[0] ; 10.493 ; 10.493 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[1]    ; out_ctrl:inst|numRes[0] ; 10.697 ; 10.697 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[2]    ; out_ctrl:inst|numRes[0] ; 10.732 ; 10.732 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[3]    ; out_ctrl:inst|numRes[0] ; 10.683 ; 10.683 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[4]    ; out_ctrl:inst|numRes[0] ; 10.650 ; 10.650 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[5]    ; out_ctrl:inst|numRes[0] ; 10.482 ; 10.482 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[6]    ; out_ctrl:inst|numRes[0] ; 10.683 ; 10.683 ; Rise       ; out_ctrl:inst|numRes[0] ;
; R0[*]     ; out_ctrl:inst|numRes[0] ; 10.454 ; 10.454 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[0]    ; out_ctrl:inst|numRes[0] ; 10.386 ; 10.386 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[1]    ; out_ctrl:inst|numRes[0] ; 10.432 ; 10.432 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[2]    ; out_ctrl:inst|numRes[0] ; 10.454 ; 10.454 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[3]    ; out_ctrl:inst|numRes[0] ; 10.418 ; 10.418 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[4]    ; out_ctrl:inst|numRes[0] ; 10.097 ; 10.097 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[5]    ; out_ctrl:inst|numRes[0] ; 10.280 ; 10.280 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[6]    ; out_ctrl:inst|numRes[0] ; 10.100 ; 10.100 ; Fall       ; out_ctrl:inst|numRes[0] ;
; R1[*]     ; out_ctrl:inst|numRes[0] ; 10.487 ; 10.487 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[0]    ; out_ctrl:inst|numRes[0] ; 10.248 ; 10.248 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[1]    ; out_ctrl:inst|numRes[0] ; 10.452 ; 10.452 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[2]    ; out_ctrl:inst|numRes[0] ; 10.487 ; 10.487 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[3]    ; out_ctrl:inst|numRes[0] ; 10.438 ; 10.438 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[4]    ; out_ctrl:inst|numRes[0] ; 10.405 ; 10.405 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[5]    ; out_ctrl:inst|numRes[0] ; 10.237 ; 10.237 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[6]    ; out_ctrl:inst|numRes[0] ; 10.438 ; 10.438 ; Fall       ; out_ctrl:inst|numRes[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; A0[*]     ; clk                     ; 6.970  ; 6.970  ; Fall       ; clk                     ;
;  A0[0]    ; clk                     ; 7.274  ; 7.274  ; Fall       ; clk                     ;
;  A0[1]    ; clk                     ; 6.970  ; 6.970  ; Fall       ; clk                     ;
;  A0[2]    ; clk                     ; 7.290  ; 7.290  ; Fall       ; clk                     ;
;  A0[3]    ; clk                     ; 7.316  ; 7.316  ; Fall       ; clk                     ;
;  A0[4]    ; clk                     ; 7.281  ; 7.281  ; Fall       ; clk                     ;
;  A0[5]    ; clk                     ; 7.547  ; 7.547  ; Fall       ; clk                     ;
;  A0[6]    ; clk                     ; 6.980  ; 6.980  ; Fall       ; clk                     ;
; B0[*]     ; clk                     ; 7.308  ; 7.308  ; Fall       ; clk                     ;
;  B0[0]    ; clk                     ; 7.308  ; 7.308  ; Fall       ; clk                     ;
;  B0[1]    ; clk                     ; 7.591  ; 7.591  ; Fall       ; clk                     ;
;  B0[2]    ; clk                     ; 7.591  ; 7.591  ; Fall       ; clk                     ;
;  B0[3]    ; clk                     ; 7.582  ; 7.582  ; Fall       ; clk                     ;
;  B0[4]    ; clk                     ; 7.575  ; 7.575  ; Fall       ; clk                     ;
;  B0[5]    ; clk                     ; 7.593  ; 7.593  ; Fall       ; clk                     ;
;  B0[6]    ; clk                     ; 7.324  ; 7.324  ; Fall       ; clk                     ;
; R0[*]     ; clk                     ; 9.286  ; 9.286  ; Fall       ; clk                     ;
;  R0[0]    ; clk                     ; 9.309  ; 9.309  ; Fall       ; clk                     ;
;  R0[1]    ; clk                     ; 9.304  ; 9.304  ; Fall       ; clk                     ;
;  R0[2]    ; clk                     ; 9.321  ; 9.321  ; Fall       ; clk                     ;
;  R0[3]    ; clk                     ; 9.286  ; 9.286  ; Fall       ; clk                     ;
;  R0[4]    ; clk                     ; 9.562  ; 9.562  ; Fall       ; clk                     ;
;  R0[5]    ; clk                     ; 9.790  ; 9.790  ; Fall       ; clk                     ;
;  R0[6]    ; clk                     ; 9.558  ; 9.558  ; Fall       ; clk                     ;
; R1[*]     ; clk                     ; 9.326  ; 9.326  ; Fall       ; clk                     ;
;  R1[0]    ; clk                     ; 9.539  ; 9.539  ; Fall       ; clk                     ;
;  R1[1]    ; clk                     ; 9.335  ; 9.335  ; Fall       ; clk                     ;
;  R1[2]    ; clk                     ; 9.777  ; 9.777  ; Fall       ; clk                     ;
;  R1[3]    ; clk                     ; 9.340  ; 9.340  ; Fall       ; clk                     ;
;  R1[4]    ; clk                     ; 9.341  ; 9.341  ; Fall       ; clk                     ;
;  R1[5]    ; clk                     ; 9.545  ; 9.545  ; Fall       ; clk                     ;
;  R1[6]    ; clk                     ; 9.326  ; 9.326  ; Fall       ; clk                     ;
; SINAL[*]  ; clk                     ; 7.185  ; 7.185  ; Fall       ; clk                     ;
;  SINAL[6] ; clk                     ; 7.185  ; 7.185  ; Fall       ; clk                     ;
; A0[*]     ; out_ctrl:inst|numA[2]   ; 7.703  ; 7.703  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[0]    ; out_ctrl:inst|numA[2]   ; 7.703  ; 7.703  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[1]    ; out_ctrl:inst|numA[2]   ; 7.766  ; 7.766  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[2]    ; out_ctrl:inst|numA[2]   ; 8.089  ; 8.089  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[3]    ; out_ctrl:inst|numA[2]   ; 8.106  ; 8.106  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[4]    ; out_ctrl:inst|numA[2]   ; 7.703  ; 7.703  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[5]    ; out_ctrl:inst|numA[2]   ; 7.962  ; 7.962  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[6]    ; out_ctrl:inst|numA[2]   ; 7.807  ; 7.807  ; Rise       ; out_ctrl:inst|numA[2]   ;
; B0[*]     ; out_ctrl:inst|numB[2]   ; 7.971  ; 7.971  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[0]    ; out_ctrl:inst|numB[2]   ; 8.259  ; 8.259  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[1]    ; out_ctrl:inst|numB[2]   ; 7.982  ; 7.982  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[2]    ; out_ctrl:inst|numB[2]   ; 8.578  ; 8.578  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[3]    ; out_ctrl:inst|numB[2]   ; 8.567  ; 8.567  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[4]    ; out_ctrl:inst|numB[2]   ; 7.971  ; 7.971  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[5]    ; out_ctrl:inst|numB[2]   ; 7.989  ; 7.989  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[6]    ; out_ctrl:inst|numB[2]   ; 8.238  ; 8.238  ; Rise       ; out_ctrl:inst|numB[2]   ;
; R0[*]     ; out_ctrl:inst|numRes[0] ; 9.438  ; 9.438  ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[0]    ; out_ctrl:inst|numRes[0] ; 9.730  ; 9.730  ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[1]    ; out_ctrl:inst|numRes[0] ; 9.769  ; 9.769  ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[2]    ; out_ctrl:inst|numRes[0] ; 9.790  ; 9.790  ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[3]    ; out_ctrl:inst|numRes[0] ; 9.758  ; 9.758  ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[4]    ; out_ctrl:inst|numRes[0] ; 9.438  ; 9.438  ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[5]    ; out_ctrl:inst|numRes[0] ; 9.654  ; 9.654  ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[6]    ; out_ctrl:inst|numRes[0] ; 9.439  ; 9.439  ; Rise       ; out_ctrl:inst|numRes[0] ;
; R1[*]     ; out_ctrl:inst|numRes[0] ; 9.802  ; 9.802  ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[0]    ; out_ctrl:inst|numRes[0] ; 9.803  ; 9.803  ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[1]    ; out_ctrl:inst|numRes[0] ; 10.002 ; 10.002 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[2]    ; out_ctrl:inst|numRes[0] ; 10.041 ; 10.041 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[3]    ; out_ctrl:inst|numRes[0] ; 10.000 ; 10.000 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[4]    ; out_ctrl:inst|numRes[0] ; 9.965  ; 9.965  ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[5]    ; out_ctrl:inst|numRes[0] ; 9.802  ; 9.802  ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[6]    ; out_ctrl:inst|numRes[0] ; 9.986  ; 9.986  ; Rise       ; out_ctrl:inst|numRes[0] ;
; R0[*]     ; out_ctrl:inst|numRes[0] ; 9.616  ; 9.616  ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[0]    ; out_ctrl:inst|numRes[0] ; 9.908  ; 9.908  ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[1]    ; out_ctrl:inst|numRes[0] ; 9.947  ; 9.947  ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[2]    ; out_ctrl:inst|numRes[0] ; 9.968  ; 9.968  ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[3]    ; out_ctrl:inst|numRes[0] ; 9.936  ; 9.936  ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[4]    ; out_ctrl:inst|numRes[0] ; 9.616  ; 9.616  ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[5]    ; out_ctrl:inst|numRes[0] ; 9.832  ; 9.832  ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[6]    ; out_ctrl:inst|numRes[0] ; 9.617  ; 9.617  ; Fall       ; out_ctrl:inst|numRes[0] ;
; R1[*]     ; out_ctrl:inst|numRes[0] ; 9.980  ; 9.980  ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[0]    ; out_ctrl:inst|numRes[0] ; 9.981  ; 9.981  ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[1]    ; out_ctrl:inst|numRes[0] ; 10.180 ; 10.180 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[2]    ; out_ctrl:inst|numRes[0] ; 10.219 ; 10.219 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[3]    ; out_ctrl:inst|numRes[0] ; 10.178 ; 10.178 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[4]    ; out_ctrl:inst|numRes[0] ; 10.143 ; 10.143 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[5]    ; out_ctrl:inst|numRes[0] ; 9.980  ; 9.980  ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[6]    ; out_ctrl:inst|numRes[0] ; 10.164 ; 10.164 ; Fall       ; out_ctrl:inst|numRes[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+--------------------------------------------------+
; Fast Model Setup Summary                         ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; out_ctrl:inst|numA[2]   ; -1.074 ; -2.897        ;
; out_ctrl:inst|numRes[0] ; -1.059 ; -6.336        ;
; out_ctrl:inst|numB[2]   ; -1.049 ; -3.197        ;
+-------------------------+--------+---------------+


+--------------------------------------------------+
; Fast Model Hold Summary                          ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; out_ctrl:inst|numRes[0] ; -2.176 ; -12.863       ;
; out_ctrl:inst|numA[2]   ; -0.917 ; -2.601        ;
; out_ctrl:inst|numB[2]   ; -0.800 ; -2.318        ;
+-------------------------+--------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+--------------------------------------------------+
; Fast Model Minimum Pulse Width Summary           ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; clk                     ; -1.380 ; -28.380       ;
; out_ctrl:inst|numRes[0] ; 0.321  ; 0.000         ;
; out_ctrl:inst|numA[2]   ; 0.500  ; 0.000         ;
; out_ctrl:inst|numB[2]   ; 0.500  ; 0.000         ;
+-------------------------+--------+---------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'out_ctrl:inst|numA[2]'                                                                                                                   ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+
; Slack  ; From Node             ; To Node                           ; Launch Clock          ; Latch Clock           ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+
; -1.074 ; out_ctrl:inst|numA[1] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.194      ; 1.193      ;
; -0.970 ; out_ctrl:inst|numA[1] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.195      ; 1.192      ;
; -0.950 ; out_ctrl:inst|numA[4] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.541      ; 1.416      ;
; -0.846 ; out_ctrl:inst|numA[4] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.542      ; 1.415      ;
; -0.844 ; out_ctrl:inst|numA[3] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.541      ; 1.310      ;
; -0.823 ; out_ctrl:inst|numA[1] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.189      ; 1.114      ;
; -0.737 ; out_ctrl:inst|numA[3] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.542      ; 1.306      ;
; -0.706 ; out_ctrl:inst|numA[4] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.536      ; 1.344      ;
; -0.692 ; out_ctrl:inst|numA[6] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.541      ; 1.158      ;
; -0.595 ; out_ctrl:inst|numA[3] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.536      ; 1.233      ;
; -0.498 ; out_ctrl:inst|numA[5] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.608      ; 1.133      ;
; -0.494 ; out_ctrl:inst|numA[5] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.607      ; 1.026      ;
; -0.350 ; out_ctrl:inst|numA[6] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.536      ; 0.988      ;
; -0.308 ; out_ctrl:inst|numA[7] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.607      ; 0.840      ;
; -0.282 ; out_ctrl:inst|numA[6] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.542      ; 0.851      ;
; -0.206 ; out_ctrl:inst|numA[7] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.608      ; 0.841      ;
; -0.125 ; out_ctrl:inst|numA[5] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.602      ; 0.829      ;
; -0.030 ; out_ctrl:inst|numA[0] ; out_num:inst2|binbcd:inst|bcd0[0] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.141      ; 0.325      ;
; 0.072  ; out_ctrl:inst|numA[7] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; 0.500        ; 0.602      ; 0.632      ;
; 0.656  ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[1] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; 0.500        ; 1.838      ; 1.248      ;
; 0.757  ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[2] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; 0.500        ; 1.839      ; 1.250      ;
; 0.901  ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[3] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; 0.500        ; 1.833      ; 1.175      ;
; 1.156  ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[1] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; 1.000        ; 1.838      ; 1.248      ;
; 1.257  ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[2] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; 1.000        ; 1.839      ; 1.250      ;
; 1.401  ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[3] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; 1.000        ; 1.833      ; 1.175      ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'out_ctrl:inst|numRes[0]'                                                                                                                        ;
+--------+-------------------------+------------------------------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                            ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+------------------------------------+-------------------------+-------------------------+--------------+------------+------------+
; -1.059 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.652      ; 1.819      ;
; -1.050 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.655      ; 1.814      ;
; -1.014 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.652      ; 1.774      ;
; -1.012 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.592      ; 1.755      ;
; -1.011 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.655      ; 1.775      ;
; -0.985 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.652      ; 1.745      ;
; -0.975 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.655      ; 1.739      ;
; -0.966 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.592      ; 1.709      ;
; -0.961 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.652      ; 1.721      ;
; -0.952 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.655      ; 1.716      ;
; -0.919 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.663      ; 1.691      ;
; -0.919 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.652      ; 1.679      ;
; -0.914 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.592      ; 1.657      ;
; -0.912 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.655      ; 1.676      ;
; -0.910 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.652      ; 1.670      ;
; -0.898 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.655      ; 1.662      ;
; -0.880 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.663      ; 1.652      ;
; -0.872 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.592      ; 1.615      ;
; -0.852 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.592      ; 1.595      ;
; -0.844 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.663      ; 1.616      ;
; -0.833 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.652      ; 1.593      ;
; -0.822 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.663      ; 1.594      ;
; -0.817 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.593      ; 1.561      ;
; -0.781 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.663      ; 1.553      ;
; -0.769 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.655      ; 1.533      ;
; -0.768 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.591      ; 1.581      ;
; -0.767 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.663      ; 1.539      ;
; -0.761 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.593      ; 1.505      ;
; -0.726 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.663      ; 1.498      ;
; -0.720 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.593      ; 1.464      ;
; -0.719 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.593      ; 1.463      ;
; -0.711 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.594      ; 1.457      ;
; -0.709 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.591      ; 1.522      ;
; -0.688 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.591      ; 1.501      ;
; -0.680 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.594      ; 1.426      ;
; -0.677 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.593      ; 1.421      ;
; -0.669 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.591      ; 1.482      ;
; -0.655 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.594      ; 1.401      ;
; -0.614 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.591      ; 1.427      ;
; -0.613 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.592      ; 1.356      ;
; -0.613 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.594      ; 1.359      ;
; -0.605 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.594      ; 1.351      ;
; -0.571 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.591      ; 1.384      ;
; -0.571 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.594      ; 1.317      ;
; -0.541 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.591      ; 1.354      ;
; -0.540 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.592      ; 1.283      ;
; -0.539 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.593      ; 1.283      ;
; -0.528 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.594      ; 1.274      ;
; -0.486 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.725      ; 1.819      ;
; -0.477 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.728      ; 1.814      ;
; -0.462 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.500        ; 0.593      ; 1.206      ;
; -0.441 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.725      ; 1.774      ;
; -0.439 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.665      ; 1.755      ;
; -0.438 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.728      ; 1.775      ;
; -0.412 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.725      ; 1.745      ;
; -0.402 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.728      ; 1.739      ;
; -0.393 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.665      ; 1.709      ;
; -0.388 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.725      ; 1.721      ;
; -0.379 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.728      ; 1.716      ;
; -0.346 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.736      ; 1.691      ;
; -0.346 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.725      ; 1.679      ;
; -0.341 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.665      ; 1.657      ;
; -0.339 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.728      ; 1.676      ;
; -0.337 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.725      ; 1.670      ;
; -0.325 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.728      ; 1.662      ;
; -0.307 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.736      ; 1.652      ;
; -0.299 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.665      ; 1.615      ;
; -0.279 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.665      ; 1.595      ;
; -0.271 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.736      ; 1.616      ;
; -0.260 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.725      ; 1.593      ;
; -0.249 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.736      ; 1.594      ;
; -0.244 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.666      ; 1.561      ;
; -0.208 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.736      ; 1.553      ;
; -0.196 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.728      ; 1.533      ;
; -0.195 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.664      ; 1.581      ;
; -0.194 ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.736      ; 1.539      ;
; -0.188 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.666      ; 1.505      ;
; -0.153 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.736      ; 1.498      ;
; -0.147 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.666      ; 1.464      ;
; -0.146 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.666      ; 1.463      ;
; -0.138 ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.667      ; 1.457      ;
; -0.136 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.664      ; 1.522      ;
; -0.115 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.664      ; 1.501      ;
; -0.107 ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.667      ; 1.426      ;
; -0.104 ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.666      ; 1.421      ;
; -0.096 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.664      ; 1.482      ;
; -0.082 ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.667      ; 1.401      ;
; -0.041 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.664      ; 1.427      ;
; -0.040 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.665      ; 1.356      ;
; -0.040 ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.667      ; 1.359      ;
; -0.032 ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.667      ; 1.351      ;
; 0.002  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.664      ; 1.384      ;
; 0.002  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.667      ; 1.317      ;
; 0.032  ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.664      ; 1.354      ;
; 0.033  ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.665      ; 1.283      ;
; 0.034  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.666      ; 1.283      ;
; 0.045  ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.667      ; 1.274      ;
; 0.111  ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 1.000        ; 0.666      ; 1.206      ;
; 0.911  ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[1] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.500        ; 2.579      ; 1.917      ;
; 0.958  ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[3] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.500        ; 2.519      ; 1.853      ;
+--------+-------------------------+------------------------------------+-------------------------+-------------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'out_ctrl:inst|numB[2]'                                                                                                                   ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+
; Slack  ; From Node             ; To Node                           ; Launch Clock          ; Latch Clock           ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+
; -1.049 ; out_ctrl:inst|numB[1] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.064      ; 1.267      ;
; -1.017 ; out_ctrl:inst|numB[1] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.103      ; 1.231      ;
; -1.008 ; out_ctrl:inst|numB[1] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.103      ; 1.222      ;
; -0.643 ; out_ctrl:inst|numB[6] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.698      ; 1.452      ;
; -0.616 ; out_ctrl:inst|numB[3] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.659      ; 1.429      ;
; -0.612 ; out_ctrl:inst|numB[3] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.698      ; 1.421      ;
; -0.605 ; out_ctrl:inst|numB[4] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.659      ; 1.418      ;
; -0.583 ; out_ctrl:inst|numB[4] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.698      ; 1.392      ;
; -0.574 ; out_ctrl:inst|numB[3] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.698      ; 1.383      ;
; -0.563 ; out_ctrl:inst|numB[4] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.698      ; 1.372      ;
; -0.563 ; out_ctrl:inst|numB[6] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.659      ; 1.376      ;
; -0.261 ; out_ctrl:inst|numB[5] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.698      ; 1.070      ;
; -0.248 ; out_ctrl:inst|numB[6] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.698      ; 1.057      ;
; -0.164 ; out_ctrl:inst|numB[5] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.698      ; 0.973      ;
; -0.123 ; out_ctrl:inst|numB[0] ; out_num:inst3|binbcd:inst|bcd0[0] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.061      ; 0.325      ;
; -0.068 ; out_ctrl:inst|numB[5] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.659      ; 0.881      ;
; 0.014  ; out_ctrl:inst|numB[7] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.659      ; 0.799      ;
; 0.061  ; out_ctrl:inst|numB[7] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.698      ; 0.748      ;
; 0.062  ; out_ctrl:inst|numB[7] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; 0.500        ; 0.698      ; 0.747      ;
; 0.785  ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[3] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; 0.500        ; 1.717      ; 1.227      ;
; 0.818  ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[2] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; 0.500        ; 1.756      ; 1.190      ;
; 0.824  ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[1] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; 0.500        ; 1.756      ; 1.184      ;
; 1.285  ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[3] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; 1.000        ; 1.717      ; 1.227      ;
; 1.318  ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[2] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; 1.000        ; 1.756      ; 1.190      ;
; 1.324  ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[1] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; 1.000        ; 1.756      ; 1.184      ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'out_ctrl:inst|numRes[0]'                                                                                                                         ;
+--------+-------------------------+------------------------------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                            ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+------------------------------------+-------------------------+-------------------------+--------------+------------+------------+
; -2.176 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[0] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 2.688      ; 0.653      ;
; -2.070 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[0] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 2.582      ; 0.653      ;
; -1.676 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[0] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.688      ; 0.653      ;
; -1.631 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[0] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 2.769      ; 1.279      ;
; -1.613 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[2] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 2.761      ; 1.289      ;
; -1.611 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[1] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 2.758      ; 1.288      ;
; -1.570 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[0] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.582      ; 0.653      ;
; -1.526 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[2] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 2.700      ; 1.315      ;
; -1.525 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[0] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 2.663      ; 1.279      ;
; -1.507 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[2] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 2.655      ; 1.289      ;
; -1.505 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[1] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 2.652      ; 1.288      ;
; -1.491 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[1] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 2.699      ; 1.349      ;
; -1.457 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[3] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 2.697      ; 1.381      ;
; -1.420 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[2] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 2.594      ; 1.315      ;
; -1.385 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[1] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 2.593      ; 1.349      ;
; -1.358 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[3] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 2.698      ; 1.481      ;
; -1.351 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[3] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 2.591      ; 1.381      ;
; -1.252 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[3] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 0.000        ; 2.592      ; 1.481      ;
; -1.131 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[0] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.769      ; 1.279      ;
; -1.113 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[2] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.761      ; 1.289      ;
; -1.111 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[1] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.758      ; 1.288      ;
; -1.026 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[2] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.700      ; 1.315      ;
; -1.025 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[0] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.663      ; 1.279      ;
; -1.007 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[2] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.655      ; 1.289      ;
; -1.005 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[1] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.652      ; 1.288      ;
; -0.991 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[1] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.699      ; 1.349      ;
; -0.957 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[3] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.697      ; 1.381      ;
; -0.920 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[2] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.594      ; 1.315      ;
; -0.885 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[1] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.593      ; 1.349      ;
; -0.858 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[3] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.698      ; 1.481      ;
; -0.851 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd1[3] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.591      ; 1.381      ;
; -0.752 ; out_ctrl:inst|numRes[0] ; out_res:inst4|binbcd:inst3|bcd0[3] ; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; -0.500       ; 2.592      ; 1.481      ;
; 0.124  ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.728      ; 0.852      ;
; 0.126  ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.725      ; 0.851      ;
; 0.200  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.666      ; 0.866      ;
; 0.218  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.667      ; 0.885      ;
; 0.229  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.736      ; 0.965      ;
; 0.260  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.728      ; 0.988      ;
; 0.261  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.725      ; 0.986      ;
; 0.266  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.665      ; 0.931      ;
; 0.267  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.667      ; 0.934      ;
; 0.287  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.664      ; 0.951      ;
; 0.310  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.728      ; 1.038      ;
; 0.312  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.725      ; 1.037      ;
; 0.341  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.664      ; 1.005      ;
; 0.365  ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.728      ; 1.093      ;
; 0.367  ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.725      ; 1.092      ;
; 0.384  ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.728      ; 1.112      ;
; 0.386  ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.725      ; 1.111      ;
; 0.397  ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.736      ; 1.133      ;
; 0.405  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.736      ; 1.141      ;
; 0.405  ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.728      ; 1.133      ;
; 0.407  ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.725      ; 1.132      ;
; 0.436  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.665      ; 1.101      ;
; 0.452  ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.667      ; 1.119      ;
; 0.463  ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.667      ; 1.130      ;
; 0.463  ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.736      ; 1.199      ;
; 0.464  ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.728      ; 1.192      ;
; 0.466  ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.725      ; 1.191      ;
; 0.474  ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.736      ; 1.210      ;
; 0.487  ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.666      ; 1.153      ;
; 0.492  ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.667      ; 1.159      ;
; 0.503  ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.736      ; 1.239      ;
; 0.507  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.666      ; 1.173      ;
; 0.509  ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.666      ; 1.175      ;
; 0.518  ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 0.834      ; 0.852      ;
; 0.520  ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 0.831      ; 0.851      ;
; 0.521  ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.664      ; 1.185      ;
; 0.527  ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.666      ; 1.193      ;
; 0.532  ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.664      ; 1.196      ;
; 0.540  ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.666      ; 1.206      ;
; 0.551  ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.667      ; 1.218      ;
; 0.561  ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.664      ; 1.225      ;
; 0.586  ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.666      ; 1.252      ;
; 0.594  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[1] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 0.772      ; 0.866      ;
; 0.605  ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.736      ; 1.341      ;
; 0.606  ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.665      ; 1.271      ;
; 0.607  ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.667      ; 1.274      ;
; 0.612  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 0.773      ; 0.885      ;
; 0.620  ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.665      ; 1.285      ;
; 0.620  ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.664      ; 1.284      ;
; 0.623  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 0.842      ; 0.965      ;
; 0.654  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 0.834      ; 0.988      ;
; 0.655  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 0.831      ; 0.986      ;
; 0.660  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 0.771      ; 0.931      ;
; 0.660  ; out_ctrl:inst|numRes[1] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.665      ; 1.325      ;
; 0.661  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[2] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 0.773      ; 0.934      ;
; 0.681  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 0.770      ; 0.951      ;
; 0.681  ; out_ctrl:inst|numRes[6] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.664      ; 1.345      ;
; 0.681  ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.665      ; 1.346      ;
; 0.696  ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd0[3] ; clk                     ; out_ctrl:inst|numRes[0] ; 0.000        ; 0.665      ; 1.361      ;
; 0.704  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 0.834      ; 1.038      ;
; 0.706  ; out_ctrl:inst|numRes[5] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 0.831      ; 1.037      ;
; 0.735  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[3] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 0.770      ; 1.005      ;
; 0.759  ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 0.834      ; 1.093      ;
; 0.761  ; out_ctrl:inst|numRes[3] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 0.831      ; 1.092      ;
; 0.778  ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[2] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 0.834      ; 1.112      ;
; 0.780  ; out_ctrl:inst|numRes[4] ; out_res:inst4|binbcd:inst3|bcd0[1] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 0.831      ; 1.111      ;
; 0.791  ; out_ctrl:inst|numRes[2] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 0.842      ; 1.133      ;
; 0.799  ; out_ctrl:inst|numRes[7] ; out_res:inst4|binbcd:inst3|bcd1[0] ; clk                     ; out_ctrl:inst|numRes[0] ; -0.500       ; 0.842      ; 1.141      ;
+--------+-------------------------+------------------------------------+-------------------------+-------------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'out_ctrl:inst|numA[2]'                                                                                                                    ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+
; Slack  ; From Node             ; To Node                           ; Launch Clock          ; Latch Clock           ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+
; -0.917 ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[3] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; 0.000        ; 1.833      ; 1.057      ;
; -0.905 ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[2] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; 0.000        ; 1.839      ; 1.075      ;
; -0.779 ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[1] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; 0.000        ; 1.838      ; 1.200      ;
; -0.417 ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[3] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; -0.500       ; 1.833      ; 1.057      ;
; -0.405 ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[2] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; -0.500       ; 1.839      ; 1.075      ;
; -0.279 ; out_ctrl:inst|numA[2] ; out_num:inst2|binbcd:inst|bcd0[1] ; out_ctrl:inst|numA[2] ; out_ctrl:inst|numA[2] ; -0.500       ; 1.838      ; 1.200      ;
; 0.530  ; out_ctrl:inst|numA[7] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.602      ; 0.632      ;
; 0.684  ; out_ctrl:inst|numA[0] ; out_num:inst2|binbcd:inst|bcd0[0] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.141      ; 0.325      ;
; 0.727  ; out_ctrl:inst|numA[5] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.602      ; 0.829      ;
; 0.733  ; out_ctrl:inst|numA[7] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.608      ; 0.841      ;
; 0.733  ; out_ctrl:inst|numA[7] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.607      ; 0.840      ;
; 0.809  ; out_ctrl:inst|numA[6] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.542      ; 0.851      ;
; 0.851  ; out_ctrl:inst|numA[5] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.608      ; 0.959      ;
; 0.859  ; out_ctrl:inst|numA[3] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.536      ; 0.895      ;
; 0.866  ; out_ctrl:inst|numA[4] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.542      ; 0.908      ;
; 0.905  ; out_ctrl:inst|numA[6] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.536      ; 0.941      ;
; 0.919  ; out_ctrl:inst|numA[5] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.607      ; 1.026      ;
; 1.025  ; out_ctrl:inst|numA[6] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.541      ; 1.066      ;
; 1.041  ; out_ctrl:inst|numA[3] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.541      ; 1.082      ;
; 1.091  ; out_ctrl:inst|numA[3] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.542      ; 1.133      ;
; 1.130  ; out_ctrl:inst|numA[4] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.536      ; 1.166      ;
; 1.254  ; out_ctrl:inst|numA[1] ; out_num:inst2|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.189      ; 0.943      ;
; 1.259  ; out_ctrl:inst|numA[1] ; out_num:inst2|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.195      ; 0.954      ;
; 1.265  ; out_ctrl:inst|numA[4] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.541      ; 1.306      ;
; 1.343  ; out_ctrl:inst|numA[1] ; out_num:inst2|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numA[2] ; -0.500       ; 0.194      ; 1.037      ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'out_ctrl:inst|numB[2]'                                                                                                                    ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+
; Slack  ; From Node             ; To Node                           ; Launch Clock          ; Latch Clock           ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+
; -0.800 ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[2] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; 0.000        ; 1.756      ; 1.097      ;
; -0.766 ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[1] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; 0.000        ; 1.756      ; 1.131      ;
; -0.752 ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[3] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; 0.000        ; 1.717      ; 1.106      ;
; -0.300 ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[2] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; -0.500       ; 1.756      ; 1.097      ;
; -0.266 ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[1] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; -0.500       ; 1.756      ; 1.131      ;
; -0.252 ; out_ctrl:inst|numB[2] ; out_num:inst3|binbcd:inst|bcd0[3] ; out_ctrl:inst|numB[2] ; out_ctrl:inst|numB[2] ; -0.500       ; 1.717      ; 1.106      ;
; 0.549  ; out_ctrl:inst|numB[7] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.698      ; 0.747      ;
; 0.550  ; out_ctrl:inst|numB[7] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.698      ; 0.748      ;
; 0.640  ; out_ctrl:inst|numB[7] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.659      ; 0.799      ;
; 0.702  ; out_ctrl:inst|numB[5] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.698      ; 0.900      ;
; 0.722  ; out_ctrl:inst|numB[5] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.659      ; 0.881      ;
; 0.723  ; out_ctrl:inst|numB[6] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.659      ; 0.882      ;
; 0.764  ; out_ctrl:inst|numB[0] ; out_num:inst3|binbcd:inst|bcd0[0] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.061      ; 0.325      ;
; 0.775  ; out_ctrl:inst|numB[5] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.698      ; 0.973      ;
; 0.819  ; out_ctrl:inst|numB[4] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.698      ; 1.017      ;
; 0.848  ; out_ctrl:inst|numB[3] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.659      ; 1.007      ;
; 0.859  ; out_ctrl:inst|numB[6] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.698      ; 1.057      ;
; 0.860  ; out_ctrl:inst|numB[6] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.698      ; 1.058      ;
; 1.010  ; out_ctrl:inst|numB[4] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.659      ; 1.169      ;
; 1.074  ; out_ctrl:inst|numB[4] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.698      ; 1.272      ;
; 1.077  ; out_ctrl:inst|numB[3] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.698      ; 1.275      ;
; 1.136  ; out_ctrl:inst|numB[3] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.698      ; 1.334      ;
; 1.505  ; out_ctrl:inst|numB[1] ; out_num:inst3|binbcd:inst|bcd0[1] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.103      ; 1.108      ;
; 1.536  ; out_ctrl:inst|numB[1] ; out_num:inst3|binbcd:inst|bcd0[2] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.103      ; 1.139      ;
; 1.565  ; out_ctrl:inst|numB[1] ; out_num:inst3|binbcd:inst|bcd0[3] ; clk                   ; out_ctrl:inst|numB[2] ; -0.500       ; 0.064      ; 1.129      ;
+--------+-----------------------+-----------------------------------+-----------------------+-----------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk'                                                                     ;
+--------+--------------+----------------+------------------+-------+------------+--------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                   ;
+--------+--------------+----------------+------------------+-------+------------+--------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clk   ; Rise       ; clk                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|apaga_d[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|apaga_d[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|apaga_d[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|apaga_d[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|apaga_d[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|apaga_d[2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numA[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numA[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numA[1]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numA[1]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numA[2]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numA[2]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numA[3]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numA[3]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numA[4]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numA[4]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numA[5]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numA[5]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numA[6]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numA[6]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numA[7]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numA[7]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numB[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numB[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numB[1]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numB[1]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numB[2]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numB[2]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numB[3]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numB[3]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numB[4]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numB[4]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numB[5]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numB[5]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numB[6]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numB[6]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numB[7]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numB[7]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numRes[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numRes[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numRes[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numRes[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numRes[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numRes[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numRes[3]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numRes[3]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numRes[4]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numRes[4]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numRes[5]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numRes[5]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numRes[6]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numRes[6]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; out_ctrl:inst|numRes[7]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; out_ctrl:inst|numRes[7]  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|inclk[0]     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|inclk[0]     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|outclk       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|outclk       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|apaga_d[0]|clk      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|apaga_d[0]|clk      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|apaga_d[1]|clk      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|apaga_d[1]|clk      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|apaga_d[2]|clk      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|apaga_d[2]|clk      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numA[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numA[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numA[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numA[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numA[2]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numA[2]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numA[3]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numA[3]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numA[4]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numA[4]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numA[5]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numA[5]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numA[6]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numA[6]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numA[7]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numA[7]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numB[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numB[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numB[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numB[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numB[2]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numB[2]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numB[3]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numB[3]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numB[4]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numB[4]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numB[5]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numB[5]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numB[6]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numB[6]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numB[7]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst|numB[7]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst|numRes[0]|clk       ;
+--------+--------------+----------------+------------------+-------+------------+--------------------------+


+------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'out_ctrl:inst|numRes[0]'                                                                                ;
+-------+--------------+----------------+------------------+-------------------------+------------+----------------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                   ; Clock Edge ; Target                                 ;
+-------+--------------+----------------+------------------+-------------------------+------------+----------------------------------------+
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~0|combout         ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~0|combout         ;
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~1clkctrl|inclk[0] ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~1clkctrl|inclk[0] ;
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~1clkctrl|outclk   ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~1clkctrl|outclk   ;
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~1|combout         ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~1|combout         ;
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~1|datac           ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~1|datac           ;
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd0[0]|datad              ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd0[0]|datad              ;
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd0[1]|datac              ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd0[1]|datac              ;
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd0[2]|datac              ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd0[2]|datac              ;
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd0[3]|datad              ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd0[3]|datad              ;
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd1[0]|datac              ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd1[0]|datac              ;
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd1[1]|datad              ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd1[1]|datad              ;
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd1[2]|datad              ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd1[2]|datad              ;
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd1[3]|datad              ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|bcd1[3]|datad              ;
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd0[0]     ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd0[0]     ;
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd0[1]     ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd0[1]     ;
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd0[2]     ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd0[2]     ;
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd0[3]     ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd0[3]     ;
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd1[0]     ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd1[0]     ;
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd1[1]     ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd1[1]     ;
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd1[2]     ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd1[2]     ;
; 0.321 ; 0.321        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd1[3]     ;
; 0.321 ; 0.321        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; out_res:inst4|binbcd:inst3|bcd1[3]     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[2]~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[2]~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[2]~1|datab           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[2]~1|datab           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[3]~2|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[3]~2|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[3]~2|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[3]~2|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[4]~3|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[4]~3|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[4]~3|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[4]~3|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[5]~4|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[5]~4|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[5]~4|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[5]~4|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[6]~6|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[6]~6|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[6]~6|datab           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[6]~6|datab           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst2|saida[7]~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst2|saida[7]~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[7]~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst2|saida[7]~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~0|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~0|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~0|datab           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~0|datab           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|WideOr17~1clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|WideOr17~1clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|WideOr17~1clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|WideOr17~1clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|WideOr17~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|WideOr17~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~1|datab           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Rise       ; inst4|inst3|WideOr17~1|datab           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|WideOr17~1|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|WideOr17~1|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd0[0]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd0[0]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd0[1]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd0[1]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd0[2]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd0[2]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd0[3]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd0[3]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd1[0]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd1[0]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd1[1]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd1[1]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd1[2]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd1[2]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd1[3]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numRes[0] ; Fall       ; inst4|inst3|bcd1[3]|datad              ;
+-------+--------------+----------------+------------------+-------------------------+------------+----------------------------------------+


+---------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'out_ctrl:inst|numA[2]'                                                                               ;
+-------+--------------+----------------+------------------+-----------------------+------------+---------------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                 ; Clock Edge ; Target                                ;
+-------+--------------+----------------+------------------+-----------------------+------------+---------------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~1clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~1clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~1clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~1clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~1|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|WideOr17~1|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|bcd0[0]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|bcd0[0]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|bcd0[1]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|bcd0[1]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|bcd0[2]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|bcd0[2]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|bcd0[3]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst2|inst|bcd0[3]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; inst|numA[2]|regout                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; inst|numA[2]|regout                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; out_num:inst2|binbcd:inst|bcd0[0]     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; out_num:inst2|binbcd:inst|bcd0[0]     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; out_num:inst2|binbcd:inst|bcd0[1]     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; out_num:inst2|binbcd:inst|bcd0[1]     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; out_num:inst2|binbcd:inst|bcd0[2]     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; out_num:inst2|binbcd:inst|bcd0[2]     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numA[2] ; Rise       ; out_num:inst2|binbcd:inst|bcd0[3]     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numA[2] ; Rise       ; out_num:inst2|binbcd:inst|bcd0[3]     ;
+-------+--------------+----------------+------------------+-----------------------+------------+---------------------------------------+


+---------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'out_ctrl:inst|numB[2]'                                                                               ;
+-------+--------------+----------------+------------------+-----------------------+------------+---------------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                 ; Clock Edge ; Target                                ;
+-------+--------------+----------------+------------------+-----------------------+------------+---------------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~1clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~1clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~1clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~1clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~1|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|WideOr17~1|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|bcd0[0]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|bcd0[0]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|bcd0[1]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|bcd0[1]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|bcd0[2]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|bcd0[2]|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|bcd0[3]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst3|inst|bcd0[3]|datad              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; inst|numB[2]|regout                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; inst|numB[2]|regout                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; out_num:inst3|binbcd:inst|bcd0[0]     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; out_num:inst3|binbcd:inst|bcd0[0]     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; out_num:inst3|binbcd:inst|bcd0[1]     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; out_num:inst3|binbcd:inst|bcd0[1]     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; out_num:inst3|binbcd:inst|bcd0[2]     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; out_num:inst3|binbcd:inst|bcd0[2]     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; out_ctrl:inst|numB[2] ; Rise       ; out_num:inst3|binbcd:inst|bcd0[3]     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; out_ctrl:inst|numB[2] ; Rise       ; out_num:inst3|binbcd:inst|bcd0[3]     ;
+-------+--------------+----------------+------------------+-----------------------+------------+---------------------------------------+


+------------------------------------------------------------------------+
; Setup Times                                                            ;
+------------+------------+-------+-------+------------+-----------------+
; Data Port  ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------+------------+-------+-------+------------+-----------------+
; estado[*]  ; clk        ; 3.535 ; 3.535 ; Fall       ; clk             ;
;  estado[0] ; clk        ; 3.535 ; 3.535 ; Fall       ; clk             ;
;  estado[1] ; clk        ; 3.443 ; 3.443 ; Fall       ; clk             ;
; memA[*]    ; clk        ; 2.414 ; 2.414 ; Fall       ; clk             ;
;  memA[0]   ; clk        ; 2.077 ; 2.077 ; Fall       ; clk             ;
;  memA[1]   ; clk        ; 2.064 ; 2.064 ; Fall       ; clk             ;
;  memA[2]   ; clk        ; 2.058 ; 2.058 ; Fall       ; clk             ;
;  memA[3]   ; clk        ; 2.305 ; 2.305 ; Fall       ; clk             ;
;  memA[4]   ; clk        ; 2.414 ; 2.414 ; Fall       ; clk             ;
;  memA[5]   ; clk        ; 1.994 ; 1.994 ; Fall       ; clk             ;
;  memA[6]   ; clk        ; 2.365 ; 2.365 ; Fall       ; clk             ;
;  memA[7]   ; clk        ; 2.043 ; 2.043 ; Fall       ; clk             ;
; memB[*]    ; clk        ; 2.931 ; 2.931 ; Fall       ; clk             ;
;  memB[0]   ; clk        ; 2.008 ; 2.008 ; Fall       ; clk             ;
;  memB[1]   ; clk        ; 2.224 ; 2.224 ; Fall       ; clk             ;
;  memB[2]   ; clk        ; 2.141 ; 2.141 ; Fall       ; clk             ;
;  memB[3]   ; clk        ; 2.931 ; 2.931 ; Fall       ; clk             ;
;  memB[4]   ; clk        ; 2.667 ; 2.667 ; Fall       ; clk             ;
;  memB[5]   ; clk        ; 2.517 ; 2.517 ; Fall       ; clk             ;
;  memB[6]   ; clk        ; 2.809 ; 2.809 ; Fall       ; clk             ;
;  memB[7]   ; clk        ; 2.309 ; 2.309 ; Fall       ; clk             ;
; res[*]     ; clk        ; 3.348 ; 3.348 ; Fall       ; clk             ;
;  res[0]    ; clk        ; 3.021 ; 3.021 ; Fall       ; clk             ;
;  res[1]    ; clk        ; 3.348 ; 3.348 ; Fall       ; clk             ;
;  res[2]    ; clk        ; 2.839 ; 2.839 ; Fall       ; clk             ;
;  res[3]    ; clk        ; 2.840 ; 2.840 ; Fall       ; clk             ;
;  res[4]    ; clk        ; 3.126 ; 3.126 ; Fall       ; clk             ;
;  res[5]    ; clk        ; 2.932 ; 2.932 ; Fall       ; clk             ;
;  res[6]    ; clk        ; 3.264 ; 3.264 ; Fall       ; clk             ;
;  res[7]    ; clk        ; 3.092 ; 3.092 ; Fall       ; clk             ;
+------------+------------+-------+-------+------------+-----------------+


+--------------------------------------------------------------------------+
; Hold Times                                                               ;
+------------+------------+--------+--------+------------+-----------------+
; Data Port  ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+------------+------------+--------+--------+------------+-----------------+
; estado[*]  ; clk        ; -1.797 ; -1.797 ; Fall       ; clk             ;
;  estado[0] ; clk        ; -1.808 ; -1.808 ; Fall       ; clk             ;
;  estado[1] ; clk        ; -1.797 ; -1.797 ; Fall       ; clk             ;
; memA[*]    ; clk        ; -1.874 ; -1.874 ; Fall       ; clk             ;
;  memA[0]   ; clk        ; -1.957 ; -1.957 ; Fall       ; clk             ;
;  memA[1]   ; clk        ; -1.944 ; -1.944 ; Fall       ; clk             ;
;  memA[2]   ; clk        ; -1.938 ; -1.938 ; Fall       ; clk             ;
;  memA[3]   ; clk        ; -2.185 ; -2.185 ; Fall       ; clk             ;
;  memA[4]   ; clk        ; -2.294 ; -2.294 ; Fall       ; clk             ;
;  memA[5]   ; clk        ; -1.874 ; -1.874 ; Fall       ; clk             ;
;  memA[6]   ; clk        ; -2.245 ; -2.245 ; Fall       ; clk             ;
;  memA[7]   ; clk        ; -1.923 ; -1.923 ; Fall       ; clk             ;
; memB[*]    ; clk        ; -1.888 ; -1.888 ; Fall       ; clk             ;
;  memB[0]   ; clk        ; -1.888 ; -1.888 ; Fall       ; clk             ;
;  memB[1]   ; clk        ; -2.104 ; -2.104 ; Fall       ; clk             ;
;  memB[2]   ; clk        ; -2.021 ; -2.021 ; Fall       ; clk             ;
;  memB[3]   ; clk        ; -2.811 ; -2.811 ; Fall       ; clk             ;
;  memB[4]   ; clk        ; -2.547 ; -2.547 ; Fall       ; clk             ;
;  memB[5]   ; clk        ; -2.397 ; -2.397 ; Fall       ; clk             ;
;  memB[6]   ; clk        ; -2.689 ; -2.689 ; Fall       ; clk             ;
;  memB[7]   ; clk        ; -2.189 ; -2.189 ; Fall       ; clk             ;
; res[*]     ; clk        ; -2.719 ; -2.719 ; Fall       ; clk             ;
;  res[0]    ; clk        ; -2.901 ; -2.901 ; Fall       ; clk             ;
;  res[1]    ; clk        ; -3.228 ; -3.228 ; Fall       ; clk             ;
;  res[2]    ; clk        ; -2.719 ; -2.719 ; Fall       ; clk             ;
;  res[3]    ; clk        ; -2.720 ; -2.720 ; Fall       ; clk             ;
;  res[4]    ; clk        ; -3.006 ; -3.006 ; Fall       ; clk             ;
;  res[5]    ; clk        ; -2.812 ; -2.812 ; Fall       ; clk             ;
;  res[6]    ; clk        ; -3.144 ; -3.144 ; Fall       ; clk             ;
;  res[7]    ; clk        ; -2.972 ; -2.972 ; Fall       ; clk             ;
+------------+------------+--------+--------+------------+-----------------+


+--------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                      ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; A0[*]     ; clk                     ; 4.100 ; 4.100 ; Fall       ; clk                     ;
;  A0[0]    ; clk                     ; 3.983 ; 3.983 ; Fall       ; clk                     ;
;  A0[1]    ; clk                     ; 3.841 ; 3.841 ; Fall       ; clk                     ;
;  A0[2]    ; clk                     ; 4.000 ; 4.000 ; Fall       ; clk                     ;
;  A0[3]    ; clk                     ; 4.021 ; 4.021 ; Fall       ; clk                     ;
;  A0[4]    ; clk                     ; 3.991 ; 3.991 ; Fall       ; clk                     ;
;  A0[5]    ; clk                     ; 4.100 ; 4.100 ; Fall       ; clk                     ;
;  A0[6]    ; clk                     ; 3.845 ; 3.845 ; Fall       ; clk                     ;
; B0[*]     ; clk                     ; 4.202 ; 4.202 ; Fall       ; clk                     ;
;  B0[0]    ; clk                     ; 4.074 ; 4.074 ; Fall       ; clk                     ;
;  B0[1]    ; clk                     ; 4.202 ; 4.202 ; Fall       ; clk                     ;
;  B0[2]    ; clk                     ; 4.199 ; 4.199 ; Fall       ; clk                     ;
;  B0[3]    ; clk                     ; 4.193 ; 4.193 ; Fall       ; clk                     ;
;  B0[4]    ; clk                     ; 4.179 ; 4.179 ; Fall       ; clk                     ;
;  B0[5]    ; clk                     ; 4.197 ; 4.197 ; Fall       ; clk                     ;
;  B0[6]    ; clk                     ; 4.090 ; 4.090 ; Fall       ; clk                     ;
; R0[*]     ; clk                     ; 5.280 ; 5.280 ; Fall       ; clk                     ;
;  R0[0]    ; clk                     ; 5.076 ; 5.076 ; Fall       ; clk                     ;
;  R0[1]    ; clk                     ; 5.068 ; 5.068 ; Fall       ; clk                     ;
;  R0[2]    ; clk                     ; 5.084 ; 5.084 ; Fall       ; clk                     ;
;  R0[3]    ; clk                     ; 5.053 ; 5.053 ; Fall       ; clk                     ;
;  R0[4]    ; clk                     ; 5.170 ; 5.170 ; Fall       ; clk                     ;
;  R0[5]    ; clk                     ; 5.280 ; 5.280 ; Fall       ; clk                     ;
;  R0[6]    ; clk                     ; 5.174 ; 5.174 ; Fall       ; clk                     ;
; R1[*]     ; clk                     ; 5.261 ; 5.261 ; Fall       ; clk                     ;
;  R1[0]    ; clk                     ; 5.147 ; 5.147 ; Fall       ; clk                     ;
;  R1[1]    ; clk                     ; 5.066 ; 5.066 ; Fall       ; clk                     ;
;  R1[2]    ; clk                     ; 5.261 ; 5.261 ; Fall       ; clk                     ;
;  R1[3]    ; clk                     ; 5.071 ; 5.071 ; Fall       ; clk                     ;
;  R1[4]    ; clk                     ; 5.072 ; 5.072 ; Fall       ; clk                     ;
;  R1[5]    ; clk                     ; 5.151 ; 5.151 ; Fall       ; clk                     ;
;  R1[6]    ; clk                     ; 5.057 ; 5.057 ; Fall       ; clk                     ;
; SINAL[*]  ; clk                     ; 3.895 ; 3.895 ; Fall       ; clk                     ;
;  SINAL[6] ; clk                     ; 3.895 ; 3.895 ; Fall       ; clk                     ;
; A0[*]     ; out_ctrl:inst|numA[2]   ; 4.463 ; 4.463 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[0]    ; out_ctrl:inst|numA[2]   ; 4.260 ; 4.260 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[1]    ; out_ctrl:inst|numA[2]   ; 4.297 ; 4.297 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[2]    ; out_ctrl:inst|numA[2]   ; 4.463 ; 4.463 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[3]    ; out_ctrl:inst|numA[2]   ; 4.456 ; 4.456 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[4]    ; out_ctrl:inst|numA[2]   ; 4.267 ; 4.267 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[5]    ; out_ctrl:inst|numA[2]   ; 4.376 ; 4.376 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[6]    ; out_ctrl:inst|numA[2]   ; 4.296 ; 4.296 ; Rise       ; out_ctrl:inst|numA[2]   ;
; B0[*]     ; out_ctrl:inst|numB[2]   ; 4.628 ; 4.628 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[0]    ; out_ctrl:inst|numB[2]   ; 4.500 ; 4.500 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[1]    ; out_ctrl:inst|numB[2]   ; 4.389 ; 4.389 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[2]    ; out_ctrl:inst|numB[2]   ; 4.628 ; 4.628 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[3]    ; out_ctrl:inst|numB[2]   ; 4.620 ; 4.620 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[4]    ; out_ctrl:inst|numB[2]   ; 4.357 ; 4.357 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[5]    ; out_ctrl:inst|numB[2]   ; 4.380 ; 4.380 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[6]    ; out_ctrl:inst|numB[2]   ; 4.507 ; 4.507 ; Rise       ; out_ctrl:inst|numB[2]   ;
; R0[*]     ; out_ctrl:inst|numRes[0] ; 5.298 ; 5.298 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[0]    ; out_ctrl:inst|numRes[0] ; 5.261 ; 5.261 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[1]    ; out_ctrl:inst|numRes[0] ; 5.277 ; 5.277 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[2]    ; out_ctrl:inst|numRes[0] ; 5.298 ; 5.298 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[3]    ; out_ctrl:inst|numRes[0] ; 5.263 ; 5.263 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[4]    ; out_ctrl:inst|numRes[0] ; 5.125 ; 5.125 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[5]    ; out_ctrl:inst|numRes[0] ; 5.221 ; 5.221 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[6]    ; out_ctrl:inst|numRes[0] ; 5.147 ; 5.147 ; Rise       ; out_ctrl:inst|numRes[0] ;
; R1[*]     ; out_ctrl:inst|numRes[0] ; 5.302 ; 5.302 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[0]    ; out_ctrl:inst|numRes[0] ; 5.186 ; 5.186 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[1]    ; out_ctrl:inst|numRes[0] ; 5.283 ; 5.283 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[2]    ; out_ctrl:inst|numRes[0] ; 5.302 ; 5.302 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[3]    ; out_ctrl:inst|numRes[0] ; 5.272 ; 5.272 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[4]    ; out_ctrl:inst|numRes[0] ; 5.268 ; 5.268 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[5]    ; out_ctrl:inst|numRes[0] ; 5.175 ; 5.175 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[6]    ; out_ctrl:inst|numRes[0] ; 5.290 ; 5.290 ; Rise       ; out_ctrl:inst|numRes[0] ;
; R0[*]     ; out_ctrl:inst|numRes[0] ; 5.192 ; 5.192 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[0]    ; out_ctrl:inst|numRes[0] ; 5.155 ; 5.155 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[1]    ; out_ctrl:inst|numRes[0] ; 5.171 ; 5.171 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[2]    ; out_ctrl:inst|numRes[0] ; 5.192 ; 5.192 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[3]    ; out_ctrl:inst|numRes[0] ; 5.157 ; 5.157 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[4]    ; out_ctrl:inst|numRes[0] ; 5.019 ; 5.019 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[5]    ; out_ctrl:inst|numRes[0] ; 5.115 ; 5.115 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[6]    ; out_ctrl:inst|numRes[0] ; 5.041 ; 5.041 ; Fall       ; out_ctrl:inst|numRes[0] ;
; R1[*]     ; out_ctrl:inst|numRes[0] ; 5.196 ; 5.196 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[0]    ; out_ctrl:inst|numRes[0] ; 5.080 ; 5.080 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[1]    ; out_ctrl:inst|numRes[0] ; 5.177 ; 5.177 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[2]    ; out_ctrl:inst|numRes[0] ; 5.196 ; 5.196 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[3]    ; out_ctrl:inst|numRes[0] ; 5.166 ; 5.166 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[4]    ; out_ctrl:inst|numRes[0] ; 5.162 ; 5.162 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[5]    ; out_ctrl:inst|numRes[0] ; 5.069 ; 5.069 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[6]    ; out_ctrl:inst|numRes[0] ; 5.184 ; 5.184 ; Fall       ; out_ctrl:inst|numRes[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+--------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                              ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; A0[*]     ; clk                     ; 3.841 ; 3.841 ; Fall       ; clk                     ;
;  A0[0]    ; clk                     ; 3.983 ; 3.983 ; Fall       ; clk                     ;
;  A0[1]    ; clk                     ; 3.841 ; 3.841 ; Fall       ; clk                     ;
;  A0[2]    ; clk                     ; 4.000 ; 4.000 ; Fall       ; clk                     ;
;  A0[3]    ; clk                     ; 4.021 ; 4.021 ; Fall       ; clk                     ;
;  A0[4]    ; clk                     ; 3.991 ; 3.991 ; Fall       ; clk                     ;
;  A0[5]    ; clk                     ; 4.100 ; 4.100 ; Fall       ; clk                     ;
;  A0[6]    ; clk                     ; 3.845 ; 3.845 ; Fall       ; clk                     ;
; B0[*]     ; clk                     ; 4.074 ; 4.074 ; Fall       ; clk                     ;
;  B0[0]    ; clk                     ; 4.074 ; 4.074 ; Fall       ; clk                     ;
;  B0[1]    ; clk                     ; 4.202 ; 4.202 ; Fall       ; clk                     ;
;  B0[2]    ; clk                     ; 4.199 ; 4.199 ; Fall       ; clk                     ;
;  B0[3]    ; clk                     ; 4.193 ; 4.193 ; Fall       ; clk                     ;
;  B0[4]    ; clk                     ; 4.179 ; 4.179 ; Fall       ; clk                     ;
;  B0[5]    ; clk                     ; 4.197 ; 4.197 ; Fall       ; clk                     ;
;  B0[6]    ; clk                     ; 4.090 ; 4.090 ; Fall       ; clk                     ;
; R0[*]     ; clk                     ; 5.053 ; 5.053 ; Fall       ; clk                     ;
;  R0[0]    ; clk                     ; 5.076 ; 5.076 ; Fall       ; clk                     ;
;  R0[1]    ; clk                     ; 5.068 ; 5.068 ; Fall       ; clk                     ;
;  R0[2]    ; clk                     ; 5.084 ; 5.084 ; Fall       ; clk                     ;
;  R0[3]    ; clk                     ; 5.053 ; 5.053 ; Fall       ; clk                     ;
;  R0[4]    ; clk                     ; 5.170 ; 5.170 ; Fall       ; clk                     ;
;  R0[5]    ; clk                     ; 5.280 ; 5.280 ; Fall       ; clk                     ;
;  R0[6]    ; clk                     ; 5.174 ; 5.174 ; Fall       ; clk                     ;
; R1[*]     ; clk                     ; 5.057 ; 5.057 ; Fall       ; clk                     ;
;  R1[0]    ; clk                     ; 5.147 ; 5.147 ; Fall       ; clk                     ;
;  R1[1]    ; clk                     ; 5.066 ; 5.066 ; Fall       ; clk                     ;
;  R1[2]    ; clk                     ; 5.261 ; 5.261 ; Fall       ; clk                     ;
;  R1[3]    ; clk                     ; 5.071 ; 5.071 ; Fall       ; clk                     ;
;  R1[4]    ; clk                     ; 5.072 ; 5.072 ; Fall       ; clk                     ;
;  R1[5]    ; clk                     ; 5.151 ; 5.151 ; Fall       ; clk                     ;
;  R1[6]    ; clk                     ; 5.057 ; 5.057 ; Fall       ; clk                     ;
; SINAL[*]  ; clk                     ; 3.895 ; 3.895 ; Fall       ; clk                     ;
;  SINAL[6] ; clk                     ; 3.895 ; 3.895 ; Fall       ; clk                     ;
; A0[*]     ; out_ctrl:inst|numA[2]   ; 3.994 ; 3.994 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[0]    ; out_ctrl:inst|numA[2]   ; 3.995 ; 3.995 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[1]    ; out_ctrl:inst|numA[2]   ; 4.011 ; 4.011 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[2]    ; out_ctrl:inst|numA[2]   ; 4.172 ; 4.172 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[3]    ; out_ctrl:inst|numA[2]   ; 4.189 ; 4.189 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[4]    ; out_ctrl:inst|numA[2]   ; 3.994 ; 3.994 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[5]    ; out_ctrl:inst|numA[2]   ; 4.098 ; 4.098 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[6]    ; out_ctrl:inst|numA[2]   ; 4.016 ; 4.016 ; Rise       ; out_ctrl:inst|numA[2]   ;
; B0[*]     ; out_ctrl:inst|numB[2]   ; 4.143 ; 4.143 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[0]    ; out_ctrl:inst|numB[2]   ; 4.278 ; 4.278 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[1]    ; out_ctrl:inst|numB[2]   ; 4.161 ; 4.161 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[2]    ; out_ctrl:inst|numB[2]   ; 4.417 ; 4.417 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[3]    ; out_ctrl:inst|numB[2]   ; 4.409 ; 4.409 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[4]    ; out_ctrl:inst|numB[2]   ; 4.143 ; 4.143 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[5]    ; out_ctrl:inst|numB[2]   ; 4.160 ; 4.160 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[6]    ; out_ctrl:inst|numB[2]   ; 4.283 ; 4.283 ; Rise       ; out_ctrl:inst|numB[2]   ;
; R0[*]     ; out_ctrl:inst|numRes[0] ; 4.727 ; 4.727 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[0]    ; out_ctrl:inst|numRes[0] ; 4.866 ; 4.866 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[1]    ; out_ctrl:inst|numRes[0] ; 4.878 ; 4.878 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[2]    ; out_ctrl:inst|numRes[0] ; 4.895 ; 4.895 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[3]    ; out_ctrl:inst|numRes[0] ; 4.866 ; 4.866 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[4]    ; out_ctrl:inst|numRes[0] ; 4.727 ; 4.727 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[5]    ; out_ctrl:inst|numRes[0] ; 4.828 ; 4.828 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[6]    ; out_ctrl:inst|numRes[0] ; 4.752 ; 4.752 ; Rise       ; out_ctrl:inst|numRes[0] ;
; R1[*]     ; out_ctrl:inst|numRes[0] ; 4.886 ; 4.886 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[0]    ; out_ctrl:inst|numRes[0] ; 4.886 ; 4.886 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[1]    ; out_ctrl:inst|numRes[0] ; 4.978 ; 4.978 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[2]    ; out_ctrl:inst|numRes[0] ; 5.004 ; 5.004 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[3]    ; out_ctrl:inst|numRes[0] ; 4.981 ; 4.981 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[4]    ; out_ctrl:inst|numRes[0] ; 4.972 ; 4.972 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[5]    ; out_ctrl:inst|numRes[0] ; 4.888 ; 4.888 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[6]    ; out_ctrl:inst|numRes[0] ; 4.986 ; 4.986 ; Rise       ; out_ctrl:inst|numRes[0] ;
; R0[*]     ; out_ctrl:inst|numRes[0] ; 4.800 ; 4.800 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[0]    ; out_ctrl:inst|numRes[0] ; 4.939 ; 4.939 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[1]    ; out_ctrl:inst|numRes[0] ; 4.951 ; 4.951 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[2]    ; out_ctrl:inst|numRes[0] ; 4.968 ; 4.968 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[3]    ; out_ctrl:inst|numRes[0] ; 4.939 ; 4.939 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[4]    ; out_ctrl:inst|numRes[0] ; 4.800 ; 4.800 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[5]    ; out_ctrl:inst|numRes[0] ; 4.901 ; 4.901 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[6]    ; out_ctrl:inst|numRes[0] ; 4.825 ; 4.825 ; Fall       ; out_ctrl:inst|numRes[0] ;
; R1[*]     ; out_ctrl:inst|numRes[0] ; 4.959 ; 4.959 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[0]    ; out_ctrl:inst|numRes[0] ; 4.959 ; 4.959 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[1]    ; out_ctrl:inst|numRes[0] ; 5.051 ; 5.051 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[2]    ; out_ctrl:inst|numRes[0] ; 5.077 ; 5.077 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[3]    ; out_ctrl:inst|numRes[0] ; 5.054 ; 5.054 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[4]    ; out_ctrl:inst|numRes[0] ; 5.045 ; 5.045 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[5]    ; out_ctrl:inst|numRes[0] ; 4.961 ; 4.961 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[6]    ; out_ctrl:inst|numRes[0] ; 5.059 ; 5.059 ; Fall       ; out_ctrl:inst|numRes[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+-----------------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                                     ;
+--------------------------+---------+---------+----------+---------+---------------------+
; Clock                    ; Setup   ; Hold    ; Recovery ; Removal ; Minimum Pulse Width ;
+--------------------------+---------+---------+----------+---------+---------------------+
; Worst-case Slack         ; -3.008  ; -4.335  ; N/A      ; N/A     ; -1.380              ;
;  clk                     ; N/A     ; N/A     ; N/A      ; N/A     ; -1.380              ;
;  out_ctrl:inst|numA[2]   ; -3.008  ; -1.284  ; N/A      ; N/A     ; 0.500               ;
;  out_ctrl:inst|numB[2]   ; -2.700  ; -1.042  ; N/A      ; N/A     ; 0.500               ;
;  out_ctrl:inst|numRes[0] ; -2.860  ; -4.335  ; N/A      ; N/A     ; 0.077               ;
; Design-wide TNS          ; -34.589 ; -30.422 ; 0.0      ; 0.0     ; -28.38              ;
;  clk                     ; N/A     ; N/A     ; N/A      ; N/A     ; -28.380             ;
;  out_ctrl:inst|numA[2]   ; -8.541  ; -3.562  ; N/A      ; N/A     ; 0.000               ;
;  out_ctrl:inst|numB[2]   ; -8.477  ; -2.883  ; N/A      ; N/A     ; 0.000               ;
;  out_ctrl:inst|numRes[0] ; -17.571 ; -23.977 ; N/A      ; N/A     ; 0.000               ;
+--------------------------+---------+---------+----------+---------+---------------------+


+------------------------------------------------------------------------+
; Setup Times                                                            ;
+------------+------------+-------+-------+------------+-----------------+
; Data Port  ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------+------------+-------+-------+------------+-----------------+
; estado[*]  ; clk        ; 6.474 ; 6.474 ; Fall       ; clk             ;
;  estado[0] ; clk        ; 6.474 ; 6.474 ; Fall       ; clk             ;
;  estado[1] ; clk        ; 6.269 ; 6.269 ; Fall       ; clk             ;
; memA[*]    ; clk        ; 4.130 ; 4.130 ; Fall       ; clk             ;
;  memA[0]   ; clk        ; 3.871 ; 3.871 ; Fall       ; clk             ;
;  memA[1]   ; clk        ; 3.859 ; 3.859 ; Fall       ; clk             ;
;  memA[2]   ; clk        ; 3.858 ; 3.858 ; Fall       ; clk             ;
;  memA[3]   ; clk        ; 3.877 ; 3.877 ; Fall       ; clk             ;
;  memA[4]   ; clk        ; 4.130 ; 4.130 ; Fall       ; clk             ;
;  memA[5]   ; clk        ; 3.261 ; 3.261 ; Fall       ; clk             ;
;  memA[6]   ; clk        ; 4.006 ; 4.006 ; Fall       ; clk             ;
;  memA[7]   ; clk        ; 3.330 ; 3.330 ; Fall       ; clk             ;
; memB[*]    ; clk        ; 5.121 ; 5.121 ; Fall       ; clk             ;
;  memB[0]   ; clk        ; 3.717 ; 3.717 ; Fall       ; clk             ;
;  memB[1]   ; clk        ; 4.182 ; 4.182 ; Fall       ; clk             ;
;  memB[2]   ; clk        ; 4.055 ; 4.055 ; Fall       ; clk             ;
;  memB[3]   ; clk        ; 5.121 ; 5.121 ; Fall       ; clk             ;
;  memB[4]   ; clk        ; 4.662 ; 4.662 ; Fall       ; clk             ;
;  memB[5]   ; clk        ; 4.381 ; 4.381 ; Fall       ; clk             ;
;  memB[6]   ; clk        ; 5.024 ; 5.024 ; Fall       ; clk             ;
;  memB[7]   ; clk        ; 3.905 ; 3.905 ; Fall       ; clk             ;
; res[*]     ; clk        ; 6.102 ; 6.102 ; Fall       ; clk             ;
;  res[0]    ; clk        ; 5.737 ; 5.737 ; Fall       ; clk             ;
;  res[1]    ; clk        ; 6.047 ; 6.047 ; Fall       ; clk             ;
;  res[2]    ; clk        ; 5.136 ; 5.136 ; Fall       ; clk             ;
;  res[3]    ; clk        ; 5.152 ; 5.152 ; Fall       ; clk             ;
;  res[4]    ; clk        ; 5.810 ; 5.810 ; Fall       ; clk             ;
;  res[5]    ; clk        ; 5.322 ; 5.322 ; Fall       ; clk             ;
;  res[6]    ; clk        ; 6.102 ; 6.102 ; Fall       ; clk             ;
;  res[7]    ; clk        ; 5.698 ; 5.698 ; Fall       ; clk             ;
+------------+------------+-------+-------+------------+-----------------+


+--------------------------------------------------------------------------+
; Hold Times                                                               ;
+------------+------------+--------+--------+------------+-----------------+
; Data Port  ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+------------+------------+--------+--------+------------+-----------------+
; estado[*]  ; clk        ; -1.797 ; -1.797 ; Fall       ; clk             ;
;  estado[0] ; clk        ; -1.808 ; -1.808 ; Fall       ; clk             ;
;  estado[1] ; clk        ; -1.797 ; -1.797 ; Fall       ; clk             ;
; memA[*]    ; clk        ; -1.874 ; -1.874 ; Fall       ; clk             ;
;  memA[0]   ; clk        ; -1.957 ; -1.957 ; Fall       ; clk             ;
;  memA[1]   ; clk        ; -1.944 ; -1.944 ; Fall       ; clk             ;
;  memA[2]   ; clk        ; -1.938 ; -1.938 ; Fall       ; clk             ;
;  memA[3]   ; clk        ; -2.185 ; -2.185 ; Fall       ; clk             ;
;  memA[4]   ; clk        ; -2.294 ; -2.294 ; Fall       ; clk             ;
;  memA[5]   ; clk        ; -1.874 ; -1.874 ; Fall       ; clk             ;
;  memA[6]   ; clk        ; -2.245 ; -2.245 ; Fall       ; clk             ;
;  memA[7]   ; clk        ; -1.923 ; -1.923 ; Fall       ; clk             ;
; memB[*]    ; clk        ; -1.888 ; -1.888 ; Fall       ; clk             ;
;  memB[0]   ; clk        ; -1.888 ; -1.888 ; Fall       ; clk             ;
;  memB[1]   ; clk        ; -2.104 ; -2.104 ; Fall       ; clk             ;
;  memB[2]   ; clk        ; -2.021 ; -2.021 ; Fall       ; clk             ;
;  memB[3]   ; clk        ; -2.811 ; -2.811 ; Fall       ; clk             ;
;  memB[4]   ; clk        ; -2.547 ; -2.547 ; Fall       ; clk             ;
;  memB[5]   ; clk        ; -2.397 ; -2.397 ; Fall       ; clk             ;
;  memB[6]   ; clk        ; -2.689 ; -2.689 ; Fall       ; clk             ;
;  memB[7]   ; clk        ; -2.189 ; -2.189 ; Fall       ; clk             ;
; res[*]     ; clk        ; -2.719 ; -2.719 ; Fall       ; clk             ;
;  res[0]    ; clk        ; -2.901 ; -2.901 ; Fall       ; clk             ;
;  res[1]    ; clk        ; -3.228 ; -3.228 ; Fall       ; clk             ;
;  res[2]    ; clk        ; -2.719 ; -2.719 ; Fall       ; clk             ;
;  res[3]    ; clk        ; -2.720 ; -2.720 ; Fall       ; clk             ;
;  res[4]    ; clk        ; -3.006 ; -3.006 ; Fall       ; clk             ;
;  res[5]    ; clk        ; -2.812 ; -2.812 ; Fall       ; clk             ;
;  res[6]    ; clk        ; -3.144 ; -3.144 ; Fall       ; clk             ;
;  res[7]    ; clk        ; -2.972 ; -2.972 ; Fall       ; clk             ;
+------------+------------+--------+--------+------------+-----------------+


+----------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                        ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; A0[*]     ; clk                     ; 7.547  ; 7.547  ; Fall       ; clk                     ;
;  A0[0]    ; clk                     ; 7.274  ; 7.274  ; Fall       ; clk                     ;
;  A0[1]    ; clk                     ; 6.970  ; 6.970  ; Fall       ; clk                     ;
;  A0[2]    ; clk                     ; 7.290  ; 7.290  ; Fall       ; clk                     ;
;  A0[3]    ; clk                     ; 7.316  ; 7.316  ; Fall       ; clk                     ;
;  A0[4]    ; clk                     ; 7.281  ; 7.281  ; Fall       ; clk                     ;
;  A0[5]    ; clk                     ; 7.547  ; 7.547  ; Fall       ; clk                     ;
;  A0[6]    ; clk                     ; 6.980  ; 6.980  ; Fall       ; clk                     ;
; B0[*]     ; clk                     ; 7.593  ; 7.593  ; Fall       ; clk                     ;
;  B0[0]    ; clk                     ; 7.308  ; 7.308  ; Fall       ; clk                     ;
;  B0[1]    ; clk                     ; 7.591  ; 7.591  ; Fall       ; clk                     ;
;  B0[2]    ; clk                     ; 7.591  ; 7.591  ; Fall       ; clk                     ;
;  B0[3]    ; clk                     ; 7.582  ; 7.582  ; Fall       ; clk                     ;
;  B0[4]    ; clk                     ; 7.575  ; 7.575  ; Fall       ; clk                     ;
;  B0[5]    ; clk                     ; 7.593  ; 7.593  ; Fall       ; clk                     ;
;  B0[6]    ; clk                     ; 7.324  ; 7.324  ; Fall       ; clk                     ;
; R0[*]     ; clk                     ; 9.790  ; 9.790  ; Fall       ; clk                     ;
;  R0[0]    ; clk                     ; 9.309  ; 9.309  ; Fall       ; clk                     ;
;  R0[1]    ; clk                     ; 9.304  ; 9.304  ; Fall       ; clk                     ;
;  R0[2]    ; clk                     ; 9.321  ; 9.321  ; Fall       ; clk                     ;
;  R0[3]    ; clk                     ; 9.286  ; 9.286  ; Fall       ; clk                     ;
;  R0[4]    ; clk                     ; 9.562  ; 9.562  ; Fall       ; clk                     ;
;  R0[5]    ; clk                     ; 9.790  ; 9.790  ; Fall       ; clk                     ;
;  R0[6]    ; clk                     ; 9.558  ; 9.558  ; Fall       ; clk                     ;
; R1[*]     ; clk                     ; 9.777  ; 9.777  ; Fall       ; clk                     ;
;  R1[0]    ; clk                     ; 9.539  ; 9.539  ; Fall       ; clk                     ;
;  R1[1]    ; clk                     ; 9.335  ; 9.335  ; Fall       ; clk                     ;
;  R1[2]    ; clk                     ; 9.777  ; 9.777  ; Fall       ; clk                     ;
;  R1[3]    ; clk                     ; 9.340  ; 9.340  ; Fall       ; clk                     ;
;  R1[4]    ; clk                     ; 9.341  ; 9.341  ; Fall       ; clk                     ;
;  R1[5]    ; clk                     ; 9.545  ; 9.545  ; Fall       ; clk                     ;
;  R1[6]    ; clk                     ; 9.326  ; 9.326  ; Fall       ; clk                     ;
; SINAL[*]  ; clk                     ; 7.185  ; 7.185  ; Fall       ; clk                     ;
;  SINAL[6] ; clk                     ; 7.185  ; 7.185  ; Fall       ; clk                     ;
; A0[*]     ; out_ctrl:inst|numA[2]   ; 8.762  ; 8.762  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[0]    ; out_ctrl:inst|numA[2]   ; 8.333  ; 8.333  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[1]    ; out_ctrl:inst|numA[2]   ; 8.441  ; 8.441  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[2]    ; out_ctrl:inst|numA[2]   ; 8.762  ; 8.762  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[3]    ; out_ctrl:inst|numA[2]   ; 8.761  ; 8.761  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[4]    ; out_ctrl:inst|numA[2]   ; 8.335  ; 8.335  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[5]    ; out_ctrl:inst|numA[2]   ; 8.605  ; 8.605  ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[6]    ; out_ctrl:inst|numA[2]   ; 8.477  ; 8.477  ; Rise       ; out_ctrl:inst|numA[2]   ;
; B0[*]     ; out_ctrl:inst|numB[2]   ; 9.092  ; 9.092  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[0]    ; out_ctrl:inst|numB[2]   ; 8.783  ; 8.783  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[1]    ; out_ctrl:inst|numB[2]   ; 8.512  ; 8.512  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[2]    ; out_ctrl:inst|numB[2]   ; 9.092  ; 9.092  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[3]    ; out_ctrl:inst|numB[2]   ; 9.079  ; 9.079  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[4]    ; out_ctrl:inst|numB[2]   ; 8.487  ; 8.487  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[5]    ; out_ctrl:inst|numB[2]   ; 8.511  ; 8.511  ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[6]    ; out_ctrl:inst|numB[2]   ; 8.766  ; 8.766  ; Rise       ; out_ctrl:inst|numB[2]   ;
; R0[*]     ; out_ctrl:inst|numRes[0] ; 10.699 ; 10.699 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[0]    ; out_ctrl:inst|numRes[0] ; 10.631 ; 10.631 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[1]    ; out_ctrl:inst|numRes[0] ; 10.677 ; 10.677 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[2]    ; out_ctrl:inst|numRes[0] ; 10.699 ; 10.699 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[3]    ; out_ctrl:inst|numRes[0] ; 10.663 ; 10.663 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[4]    ; out_ctrl:inst|numRes[0] ; 10.342 ; 10.342 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[5]    ; out_ctrl:inst|numRes[0] ; 10.525 ; 10.525 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[6]    ; out_ctrl:inst|numRes[0] ; 10.345 ; 10.345 ; Rise       ; out_ctrl:inst|numRes[0] ;
; R1[*]     ; out_ctrl:inst|numRes[0] ; 10.732 ; 10.732 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[0]    ; out_ctrl:inst|numRes[0] ; 10.493 ; 10.493 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[1]    ; out_ctrl:inst|numRes[0] ; 10.697 ; 10.697 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[2]    ; out_ctrl:inst|numRes[0] ; 10.732 ; 10.732 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[3]    ; out_ctrl:inst|numRes[0] ; 10.683 ; 10.683 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[4]    ; out_ctrl:inst|numRes[0] ; 10.650 ; 10.650 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[5]    ; out_ctrl:inst|numRes[0] ; 10.482 ; 10.482 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[6]    ; out_ctrl:inst|numRes[0] ; 10.683 ; 10.683 ; Rise       ; out_ctrl:inst|numRes[0] ;
; R0[*]     ; out_ctrl:inst|numRes[0] ; 10.454 ; 10.454 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[0]    ; out_ctrl:inst|numRes[0] ; 10.386 ; 10.386 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[1]    ; out_ctrl:inst|numRes[0] ; 10.432 ; 10.432 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[2]    ; out_ctrl:inst|numRes[0] ; 10.454 ; 10.454 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[3]    ; out_ctrl:inst|numRes[0] ; 10.418 ; 10.418 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[4]    ; out_ctrl:inst|numRes[0] ; 10.097 ; 10.097 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[5]    ; out_ctrl:inst|numRes[0] ; 10.280 ; 10.280 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[6]    ; out_ctrl:inst|numRes[0] ; 10.100 ; 10.100 ; Fall       ; out_ctrl:inst|numRes[0] ;
; R1[*]     ; out_ctrl:inst|numRes[0] ; 10.487 ; 10.487 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[0]    ; out_ctrl:inst|numRes[0] ; 10.248 ; 10.248 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[1]    ; out_ctrl:inst|numRes[0] ; 10.452 ; 10.452 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[2]    ; out_ctrl:inst|numRes[0] ; 10.487 ; 10.487 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[3]    ; out_ctrl:inst|numRes[0] ; 10.438 ; 10.438 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[4]    ; out_ctrl:inst|numRes[0] ; 10.405 ; 10.405 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[5]    ; out_ctrl:inst|numRes[0] ; 10.237 ; 10.237 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[6]    ; out_ctrl:inst|numRes[0] ; 10.438 ; 10.438 ; Fall       ; out_ctrl:inst|numRes[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+--------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                              ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; A0[*]     ; clk                     ; 3.841 ; 3.841 ; Fall       ; clk                     ;
;  A0[0]    ; clk                     ; 3.983 ; 3.983 ; Fall       ; clk                     ;
;  A0[1]    ; clk                     ; 3.841 ; 3.841 ; Fall       ; clk                     ;
;  A0[2]    ; clk                     ; 4.000 ; 4.000 ; Fall       ; clk                     ;
;  A0[3]    ; clk                     ; 4.021 ; 4.021 ; Fall       ; clk                     ;
;  A0[4]    ; clk                     ; 3.991 ; 3.991 ; Fall       ; clk                     ;
;  A0[5]    ; clk                     ; 4.100 ; 4.100 ; Fall       ; clk                     ;
;  A0[6]    ; clk                     ; 3.845 ; 3.845 ; Fall       ; clk                     ;
; B0[*]     ; clk                     ; 4.074 ; 4.074 ; Fall       ; clk                     ;
;  B0[0]    ; clk                     ; 4.074 ; 4.074 ; Fall       ; clk                     ;
;  B0[1]    ; clk                     ; 4.202 ; 4.202 ; Fall       ; clk                     ;
;  B0[2]    ; clk                     ; 4.199 ; 4.199 ; Fall       ; clk                     ;
;  B0[3]    ; clk                     ; 4.193 ; 4.193 ; Fall       ; clk                     ;
;  B0[4]    ; clk                     ; 4.179 ; 4.179 ; Fall       ; clk                     ;
;  B0[5]    ; clk                     ; 4.197 ; 4.197 ; Fall       ; clk                     ;
;  B0[6]    ; clk                     ; 4.090 ; 4.090 ; Fall       ; clk                     ;
; R0[*]     ; clk                     ; 5.053 ; 5.053 ; Fall       ; clk                     ;
;  R0[0]    ; clk                     ; 5.076 ; 5.076 ; Fall       ; clk                     ;
;  R0[1]    ; clk                     ; 5.068 ; 5.068 ; Fall       ; clk                     ;
;  R0[2]    ; clk                     ; 5.084 ; 5.084 ; Fall       ; clk                     ;
;  R0[3]    ; clk                     ; 5.053 ; 5.053 ; Fall       ; clk                     ;
;  R0[4]    ; clk                     ; 5.170 ; 5.170 ; Fall       ; clk                     ;
;  R0[5]    ; clk                     ; 5.280 ; 5.280 ; Fall       ; clk                     ;
;  R0[6]    ; clk                     ; 5.174 ; 5.174 ; Fall       ; clk                     ;
; R1[*]     ; clk                     ; 5.057 ; 5.057 ; Fall       ; clk                     ;
;  R1[0]    ; clk                     ; 5.147 ; 5.147 ; Fall       ; clk                     ;
;  R1[1]    ; clk                     ; 5.066 ; 5.066 ; Fall       ; clk                     ;
;  R1[2]    ; clk                     ; 5.261 ; 5.261 ; Fall       ; clk                     ;
;  R1[3]    ; clk                     ; 5.071 ; 5.071 ; Fall       ; clk                     ;
;  R1[4]    ; clk                     ; 5.072 ; 5.072 ; Fall       ; clk                     ;
;  R1[5]    ; clk                     ; 5.151 ; 5.151 ; Fall       ; clk                     ;
;  R1[6]    ; clk                     ; 5.057 ; 5.057 ; Fall       ; clk                     ;
; SINAL[*]  ; clk                     ; 3.895 ; 3.895 ; Fall       ; clk                     ;
;  SINAL[6] ; clk                     ; 3.895 ; 3.895 ; Fall       ; clk                     ;
; A0[*]     ; out_ctrl:inst|numA[2]   ; 3.994 ; 3.994 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[0]    ; out_ctrl:inst|numA[2]   ; 3.995 ; 3.995 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[1]    ; out_ctrl:inst|numA[2]   ; 4.011 ; 4.011 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[2]    ; out_ctrl:inst|numA[2]   ; 4.172 ; 4.172 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[3]    ; out_ctrl:inst|numA[2]   ; 4.189 ; 4.189 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[4]    ; out_ctrl:inst|numA[2]   ; 3.994 ; 3.994 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[5]    ; out_ctrl:inst|numA[2]   ; 4.098 ; 4.098 ; Rise       ; out_ctrl:inst|numA[2]   ;
;  A0[6]    ; out_ctrl:inst|numA[2]   ; 4.016 ; 4.016 ; Rise       ; out_ctrl:inst|numA[2]   ;
; B0[*]     ; out_ctrl:inst|numB[2]   ; 4.143 ; 4.143 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[0]    ; out_ctrl:inst|numB[2]   ; 4.278 ; 4.278 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[1]    ; out_ctrl:inst|numB[2]   ; 4.161 ; 4.161 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[2]    ; out_ctrl:inst|numB[2]   ; 4.417 ; 4.417 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[3]    ; out_ctrl:inst|numB[2]   ; 4.409 ; 4.409 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[4]    ; out_ctrl:inst|numB[2]   ; 4.143 ; 4.143 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[5]    ; out_ctrl:inst|numB[2]   ; 4.160 ; 4.160 ; Rise       ; out_ctrl:inst|numB[2]   ;
;  B0[6]    ; out_ctrl:inst|numB[2]   ; 4.283 ; 4.283 ; Rise       ; out_ctrl:inst|numB[2]   ;
; R0[*]     ; out_ctrl:inst|numRes[0] ; 4.727 ; 4.727 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[0]    ; out_ctrl:inst|numRes[0] ; 4.866 ; 4.866 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[1]    ; out_ctrl:inst|numRes[0] ; 4.878 ; 4.878 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[2]    ; out_ctrl:inst|numRes[0] ; 4.895 ; 4.895 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[3]    ; out_ctrl:inst|numRes[0] ; 4.866 ; 4.866 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[4]    ; out_ctrl:inst|numRes[0] ; 4.727 ; 4.727 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[5]    ; out_ctrl:inst|numRes[0] ; 4.828 ; 4.828 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R0[6]    ; out_ctrl:inst|numRes[0] ; 4.752 ; 4.752 ; Rise       ; out_ctrl:inst|numRes[0] ;
; R1[*]     ; out_ctrl:inst|numRes[0] ; 4.886 ; 4.886 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[0]    ; out_ctrl:inst|numRes[0] ; 4.886 ; 4.886 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[1]    ; out_ctrl:inst|numRes[0] ; 4.978 ; 4.978 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[2]    ; out_ctrl:inst|numRes[0] ; 5.004 ; 5.004 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[3]    ; out_ctrl:inst|numRes[0] ; 4.981 ; 4.981 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[4]    ; out_ctrl:inst|numRes[0] ; 4.972 ; 4.972 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[5]    ; out_ctrl:inst|numRes[0] ; 4.888 ; 4.888 ; Rise       ; out_ctrl:inst|numRes[0] ;
;  R1[6]    ; out_ctrl:inst|numRes[0] ; 4.986 ; 4.986 ; Rise       ; out_ctrl:inst|numRes[0] ;
; R0[*]     ; out_ctrl:inst|numRes[0] ; 4.800 ; 4.800 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[0]    ; out_ctrl:inst|numRes[0] ; 4.939 ; 4.939 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[1]    ; out_ctrl:inst|numRes[0] ; 4.951 ; 4.951 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[2]    ; out_ctrl:inst|numRes[0] ; 4.968 ; 4.968 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[3]    ; out_ctrl:inst|numRes[0] ; 4.939 ; 4.939 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[4]    ; out_ctrl:inst|numRes[0] ; 4.800 ; 4.800 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[5]    ; out_ctrl:inst|numRes[0] ; 4.901 ; 4.901 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R0[6]    ; out_ctrl:inst|numRes[0] ; 4.825 ; 4.825 ; Fall       ; out_ctrl:inst|numRes[0] ;
; R1[*]     ; out_ctrl:inst|numRes[0] ; 4.959 ; 4.959 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[0]    ; out_ctrl:inst|numRes[0] ; 4.959 ; 4.959 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[1]    ; out_ctrl:inst|numRes[0] ; 5.051 ; 5.051 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[2]    ; out_ctrl:inst|numRes[0] ; 5.077 ; 5.077 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[3]    ; out_ctrl:inst|numRes[0] ; 5.054 ; 5.054 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[4]    ; out_ctrl:inst|numRes[0] ; 5.045 ; 5.045 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[5]    ; out_ctrl:inst|numRes[0] ; 4.961 ; 4.961 ; Fall       ; out_ctrl:inst|numRes[0] ;
;  R1[6]    ; out_ctrl:inst|numRes[0] ; 5.059 ; 5.059 ; Fall       ; out_ctrl:inst|numRes[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+-----------------------------------------------------------------------------------------------+
; Setup Transfers                                                                               ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; From Clock              ; To Clock                ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; clk                     ; out_ctrl:inst|numA[2]   ; 0        ; 49       ; 0        ; 0        ;
; out_ctrl:inst|numA[2]   ; out_ctrl:inst|numA[2]   ; 12       ; 12       ; 0        ; 0        ;
; clk                     ; out_ctrl:inst|numB[2]   ; 0        ; 49       ; 0        ; 0        ;
; out_ctrl:inst|numB[2]   ; out_ctrl:inst|numB[2]   ; 12       ; 12       ; 0        ; 0        ;
; clk                     ; out_ctrl:inst|numRes[0] ; 0        ; 828      ; 0        ; 828      ;
; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 184      ; 184      ; 184      ; 184      ;
+-------------------------+-------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-----------------------------------------------------------------------------------------------+
; Hold Transfers                                                                                ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; From Clock              ; To Clock                ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; clk                     ; out_ctrl:inst|numA[2]   ; 0        ; 49       ; 0        ; 0        ;
; out_ctrl:inst|numA[2]   ; out_ctrl:inst|numA[2]   ; 12       ; 12       ; 0        ; 0        ;
; clk                     ; out_ctrl:inst|numB[2]   ; 0        ; 49       ; 0        ; 0        ;
; out_ctrl:inst|numB[2]   ; out_ctrl:inst|numB[2]   ; 12       ; 12       ; 0        ; 0        ;
; clk                     ; out_ctrl:inst|numRes[0] ; 0        ; 828      ; 0        ; 828      ;
; out_ctrl:inst|numRes[0] ; out_ctrl:inst|numRes[0] ; 184      ; 184      ; 184      ; 184      ;
+-------------------------+-------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 26    ; 26   ;
; Unconstrained Input Port Paths  ; 78    ; 78   ;
; Unconstrained Output Ports      ; 29    ; 29   ;
; Unconstrained Output Port Paths ; 141   ; 141  ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Tue Dec 04 20:22:41 2018
Info: Command: quartus_sta project_final -c project_final
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Warning (335093): TimeQuest Timing Analyzer is analyzing 16 combinational loops as latches.
Critical Warning (332012): Synopsys Design Constraints File file not found: 'project_final.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name clk clk
    Info (332105): create_clock -period 1.000 -name out_ctrl:inst|numA[2] out_ctrl:inst|numA[2]
    Info (332105): create_clock -period 1.000 -name out_ctrl:inst|numB[2] out_ctrl:inst|numB[2]
    Info (332105): create_clock -period 1.000 -name out_ctrl:inst|numRes[0] out_ctrl:inst|numRes[0]
Info (332097): The following timing edges are non-unate.  TimeQuest will assume pos-unate behavior for these edges in the clock network.
    Info (332098): Cell: inst4|inst2|saida[2]~1  from: datab  to: combout
    Info (332098): Cell: inst4|inst2|saida[4]~3  from: datad  to: combout
    Info (332098): Cell: inst4|inst2|saida[5]~4  from: datad  to: combout
    Info (332098): Cell: inst4|inst2|saida[6]~6  from: datab  to: combout
    Info (332098): Cell: inst4|inst|u1|f3|Add1~1  from: dataa  to: combout
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -3.008
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -3.008        -8.541 out_ctrl:inst|numA[2] 
    Info (332119):    -2.860       -17.571 out_ctrl:inst|numRes[0] 
    Info (332119):    -2.700        -8.477 out_ctrl:inst|numB[2] 
Info (332146): Worst-case hold slack is -4.335
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -4.335       -23.977 out_ctrl:inst|numRes[0] 
    Info (332119):    -1.284        -3.562 out_ctrl:inst|numA[2] 
    Info (332119):    -1.042        -2.883 out_ctrl:inst|numB[2] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -28.380 clk 
    Info (332119):     0.077         0.000 out_ctrl:inst|numRes[0] 
    Info (332119):     0.500         0.000 out_ctrl:inst|numA[2] 
    Info (332119):     0.500         0.000 out_ctrl:inst|numB[2] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Info (332097): The following timing edges are non-unate.  TimeQuest will assume pos-unate behavior for these edges in the clock network.
    Info (332098): Cell: inst4|inst2|saida[2]~1  from: datab  to: combout
    Info (332098): Cell: inst4|inst2|saida[4]~3  from: datad  to: combout
    Info (332098): Cell: inst4|inst2|saida[5]~4  from: datad  to: combout
    Info (332098): Cell: inst4|inst2|saida[6]~6  from: datab  to: combout
    Info (332098): Cell: inst4|inst|u1|f3|Add1~1  from: dataa  to: combout
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -1.074
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.074        -2.897 out_ctrl:inst|numA[2] 
    Info (332119):    -1.059        -6.336 out_ctrl:inst|numRes[0] 
    Info (332119):    -1.049        -3.197 out_ctrl:inst|numB[2] 
Info (332146): Worst-case hold slack is -2.176
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.176       -12.863 out_ctrl:inst|numRes[0] 
    Info (332119):    -0.917        -2.601 out_ctrl:inst|numA[2] 
    Info (332119):    -0.800        -2.318 out_ctrl:inst|numB[2] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -28.380 clk 
    Info (332119):     0.321         0.000 out_ctrl:inst|numRes[0] 
    Info (332119):     0.500         0.000 out_ctrl:inst|numA[2] 
    Info (332119):     0.500         0.000 out_ctrl:inst|numB[2] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 5 warnings
    Info: Peak virtual memory: 4567 megabytes
    Info: Processing ended: Tue Dec 04 20:22:43 2018
    Info: Elapsed time: 00:00:02
    Info: Total CPU time (on all processors): 00:00:01


